<!DOCTYPE html>
<!-- saved from url=(0063)https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html -->
<html lang="zh-CN" class=" "><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    
    <title>Java 并发 - 理论基础 | Java 全栈知识体系</title>
    
    <link rel="icon" href="https://www.pdai.tech/favicon.ico">
    <script async="" src="./command_files/analytics.js.下载"></script><script src="./command_files/push.js.下载"></script><script src="./command_files/f(4).txt"></script><script src="./command_files/f(5).txt" id="google_shimpl"></script><script src="./command_files/hm.js.下载"></script>
    <script defer="defer" async="async" src="./command_files/f(6).txt"></script>
    
    
    
    
    
    
    
    
    
    
    
    
    
    <link rel="preload" href="./command_files/0.styles.6e02fc53.css" as="style"><link rel="preload" href="./command_files/app.34da985c.js.下载" as="script"><link rel="preload" href="./command_files/4.64411e13.js.下载" as="script"><link rel="preload" href="./command_files/3.3821c1cf.js.下载" as="script"><link rel="preload" href="./command_files/26.38a40133.js.下载" as="script">
    <link rel="stylesheet" href="./command_files/0.styles.6e02fc53.css">
  <link rel="preload" href="./command_files/f(7).txt" as="script"><script type="text/javascript" src="./command_files/f(7).txt"></script><style type="text/css">.medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}</style><script charset="utf-8" src="./command_files/26.38a40133.js.下载"></script><script charset="utf-8" src="./command_files/vendors_docsearch.c6697184.js.下载"></script><script charset="utf-8" src="./command_files/538.756be5e3.js.下载"></script><script charset="utf-8" src="./command_files/21.ef603c8f.js.下载"></script><script charset="utf-8" src="./command_files/502.c9664f8a.js.下载"></script><link rel="preload" href="./command_files/f(7).txt" as="script"><script type="text/javascript" src="./command_files/f(7).txt"></script><script charset="utf-8" src="./command_files/501.8f59c5f5.js.下载"></script><script charset="utf-8" src="./command_files/499.1f4be0a9.js.下载"></script><script charset="utf-8" src="./command_files/504.e35d7d68.js.下载"></script><script charset="utf-8" src="./command_files/493.8ba79e10.js.下载"></script><script charset="utf-8" src="./command_files/494.a3527124.js.下载"></script><script charset="utf-8" src="./command_files/500.2a20a218.js.下载"></script><script charset="utf-8" src="./command_files/487.a036eeb7.js.下载"></script><script charset="utf-8" src="./command_files/492.2f2e0b4d.js.下载"></script><script charset="utf-8" src="./command_files/488.86d0d5d5.js.下载"></script><script charset="utf-8" src="./command_files/491.26111876.js.下载"></script><script charset="utf-8" src="./command_files/495.2413c2e6.js.下载"></script><script charset="utf-8" src="./command_files/496.4a16fef7.js.下载"></script><script charset="utf-8" src="./command_files/497.311352c1.js.下载"></script><script charset="utf-8" src="./command_files/533.059cbaaf.js.下载"></script><script charset="utf-8" src="./command_files/535.bf323481.js.下载"></script><script charset="utf-8" src="./command_files/534.6420dd57.js.下载"></script><meta name="description" content="包含: Java 基础, Java 部分源码, JVM, Spring, Spring Boot, Spring Cloud, 数据库原理, MySQL, ElasticSearch, MongoDB, Docker, k8s, CI&amp;CD, Linux, DevOps, 分布式, 中间件, 开发工具, Git, IDE, 源码阅读，读书笔记, 开源项目..."><meta property="article:modified_time" content="null"><meta property="og:title" content="Java 并发 - 理论基础"><meta property="og:type" content="article"><meta property="og:url" content="/md/java/thread/java-thread-x-theorty.html"><meta name="twitter:title" content="Java 并发 - 理论基础"><meta name="twitter:url" content="/md/java/thread/java-thread-x-theorty.html"><meta name="twitter:card" content="summary_large_image"><meta name="robots" content="all"><meta name="author" content="pdai"><meta name="keywords" content="Java 全栈知识体系, java体系, java知识体系, java框架,java全栈,java学习路线,java全栈知识, java面试, 知识体系, java技术体系, java编程, java编程指南,java开发体系, java开发,java教程,java,java数据结构, 算法, 开发基础"><meta name="apple-mobile-web-app-capable" content="yes"></head>
  <body class="">
    <div id="app" style="height: auto !important;"><div class="theme-container" style="height: auto !important;"><header class="navbar"><div class="sidebar-button"><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" viewBox="0 0 448 512" class="icon"><path fill="currentColor" d="M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"></path></svg></div> <a href="https://www.pdai.tech/" class="home-link router-link-active"><!----> <span class="site-name">Java 全栈知识体系</span></a> <div class="links" style="max-width: 1036px;"><form id="search-form" role="search" class="algolia-search-wrapper search-box"><span class="algolia-autocomplete" style="position: relative; display: inline-block; direction: ltr;"><input id="algolia-search-input" class="search-query ds-input" placeholder="" autocomplete="off" spellcheck="false" role="combobox" aria-autocomplete="list" aria-expanded="false" aria-label="search input" aria-owns="algolia-autocomplete-listbox-0" dir="auto" style="position: relative; vertical-align: top;"><pre aria-hidden="true" style="position: absolute; visibility: hidden; white-space: pre; font-family: Arial; font-size: 14.4px; font-style: normal; font-variant: normal; font-weight: 400; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-rendering: auto; text-transform: none;"></pre><span class="ds-dropdown-menu" role="listbox" id="algolia-autocomplete-listbox-0" style="position: absolute; top: 100%; z-index: 100; display: none; left: 0px; right: auto;"><div class="ds-dataset-1"></div></span></span></form> <nav class="nav-links can-hide"><div class="nav-item"><a href="https://www.pdai.tech/md/resource/tools.html" class="nav-link">
  导航
</a></div><div class="nav-item"><a href="https://www.pdai.tech/md/outline/x-outline.html" class="nav-link">
  导读
</a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="Java" class="dropdown-title"><span class="title">Java</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          Java 面向对象和基础
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/basic/java-basic-oop.html" class="nav-link">
  Java 面向对象基础
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/basic/java-basic-lan-basic.html" class="nav-link">
  Java 基础知识体系
</a></li></ul></li><li class="dropdown-item"><h4>
          Java进阶 - 集合框架
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/collection/java-collection-all.html" class="nav-link">
  Java 集合框架详解
</a></li></ul></li><li class="dropdown-item"><h4>
          Java进阶 - 并发框架
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-overview.html" class="nav-link">
  Java 并发知识体系
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html" class="nav-link router-link-exact-active router-link-active" aria-current="page">
  Java 并发理论基础
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-thread-basic.html" class="nav-link">
  Java 并发线程基础
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-overview.html" class="nav-link">
  J.U.C 知识体系与详解
</a></li></ul></li><li class="dropdown-item"><h4>
          Java进阶 - IO框架
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/io/java-io-overview.html" class="nav-link">
  Java IO/NIO/AIO详解
</a></li></ul></li><li class="dropdown-item"><h4>
          Java进阶 - 新版本特性
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/java8/java8.html" class="nav-link">
  Java 8 特性详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/java8up/java-8-up-overview.html" class="nav-link">
  Java 8 以上版本特性体系
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/java8up/java9-11.html" class="nav-link">
  Java 8 升Java 11特性必读
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/java8up/java12-17.html" class="nav-link">
  Java 11 升Java 17特性必读
</a></li></ul></li><li class="dropdown-item"><h4>
          Java进阶 - JVM相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/jvm/java-jvm-classload.html" class="nav-link">
  Java 类加载机制
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/jvm/java-jvm-struct.html" class="nav-link">
  JVM 内存结构详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/jvm/java-jvm-gc.html" class="nav-link">
  JVM 垃圾回收机制
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/jvm/java-jvm-debug-tools-linux.html" class="nav-link">
  Java 调试排错相关
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="算法" class="dropdown-title"><span class="title">算法</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          算法基础和思想
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-basic-overview.html" class="nav-link">
  数据结构基础
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-sort-overview.html" class="nav-link">
  常见排序算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-core-divide-and-conquer.html" class="nav-link">
  算法思想
</a></li></ul></li><li class="dropdown-item"><h4>
          一些领域算法
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-security-degist.html" class="nav-link">
  安全算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-char-match.html" class="nav-link">
  字符串匹配算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-distribute-overview.html" class="nav-link">
  分布式系统算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-bigdata-overview.html" class="nav-link">
  海量数据处理
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-load-balance.html" class="nav-link">
  负载均衡算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-suggest.html" class="nav-link">
  推荐算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-machine.html" class="nav-link">
  数据挖掘算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-id-snowflake.html" class="nav-link">
  ID生成算法
</a></li></ul></li><li class="dropdown-item"><h4>
          其它算法相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-other-mind.html" class="nav-link">
  头脑风暴
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="数据库" class="dropdown-title"><span class="title">数据库</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          数据库基础和原理
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/sql/sql-db.html" class="nav-link">
  数据库原理
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/sql-lan/sql-lan.html" class="nav-link">
  SQL语言
</a></li></ul></li><li class="dropdown-item"><h4>
          SQL 数据库
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/sql-mysql/sql-mysql-overview.html" class="nav-link">
  MySQL 详解
</a></li></ul></li><li class="dropdown-item"><h4>
          NoSQL 数据库
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/nosql-redis/db-redis-overview.html" class="nav-link">
  Redis 详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/nosql-mongo/mongo.html" class="nav-link">
  MongoDB 详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/nosql-es/elasticsearch.html" class="nav-link">
  ElasticSearch 详解
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="开发" class="dropdown-title"><span class="title">开发</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          开发 - 常用开发基础
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/package/dev-package-x-overview.html" class="nav-link">
  常用类库详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/regex/dev-regex-all.html" class="nav-link">
  正则表达式详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/cron/dev-cron-x-usage.html" class="nav-link">
  CRON表达式详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/protocol/dev-protocol-overview.html" class="nav-link">
  网络协议和工具详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/security/dev-security-overview.html" class="nav-link">
  安全相关详解
</a></li></ul></li><li class="dropdown-item"><h4>
          开发 - 质量保障
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/ut/dev-ut-unit-test.html" class="nav-link">
  单元测试详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/ut/dev-qt-code-style.html" class="nav-link">
  统一风格详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/ut/dev-qt-sonarlint.html" class="nav-link">
  质量管理详解
</a></li></ul></li><li class="dropdown-item"><h4>
          开发 - 代码重构
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/refactor/dev-refactor-if-else.html" class="nav-link">
  代码重构相关
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="Spring" class="dropdown-title"><span class="title">Spring</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          Spring Framework(v5.3)
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/spring.html" class="nav-link">
  Spring框架知识体系
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/spring-x-framework-introduce.html" class="nav-link">
  Spring框架组成
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/spring-x-framework-ioc.html" class="nav-link">
  控制反转(IOC)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/spring-x-framework-aop.html" class="nav-link">
  向切面编程(AOP)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/spring-x-framework-springmvc.html" class="nav-link">
  SpringMVC
</a></li></ul></li><li class="dropdown-item"><h4>
          SpringBoot系列(v2.5)
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot.html" class="nav-link">
  SpringBoot知识体系
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-hello-world.html" class="nav-link">
  SpringBoot入门
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-interface-response.html" class="nav-link">
  SpringBoot接口设计和实现
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-mysql-jpa.html" class="nav-link">
  SpringBoot集成MySQL
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-mysql-shardingjdbc.html" class="nav-link">
  SpringBoot集成ShardingJDBC
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-redis-jedis.html" class="nav-link">
  SpringBoot集成Redis
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-postgre-jpa.html" class="nav-link">
  SpringBoot集成Postgre
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-elastic-template.html" class="nav-link">
  SpringBoot集成ElasticSearch
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-socket-websocket.html" class="nav-link">
  SpringBoot集成Socket
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-task-timer.html" class="nav-link">
  SpringBoot定时任务
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-view-thymeleaf.html" class="nav-link">
  SpringBoot后端视图
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-monitor-actuartor.html" class="nav-link">
  SpringBoot监控
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-y-auo-config.html" class="nav-link">
  SpringBoot进阶
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="框架|中间件" class="dropdown-title"><span class="title">框架|中间件</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          Web 容器
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/framework/tomcat/tomcat-overview.html" class="nav-link">
  Tomcat 源码详解
</a></li></ul></li><li class="dropdown-item"><h4>
          ORM 框架
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/framework/orm-mybatis/mybatis-overview.html" class="nav-link">
  MyBatis 源码详解
</a></li></ul></li><li class="dropdown-item"><h4>
          分表分库框架
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/framework/ds-sharding/sharding-overview.html" class="nav-link">
  ShardingSphere 详解
</a></li></ul></li></ul></div></div><div class="nav-item"><a href="https://www.pdai.tech/md/arch/arch-x-overview.html" class="nav-link">
  架构
</a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="工具|部署" class="dropdown-title"><span class="title">工具|部署</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><!----> <a href="https://www.pdai.tech/md/devops/tool/tool-list-overview.html" class="nav-link">
  开发工具
</a></li><li class="dropdown-item"><!----> <a href="https://www.pdai.tech/md/devops/tool/tool-git.html" class="nav-link">
  Git详解
</a></li><li class="dropdown-item"><!----> <a href="https://www.pdai.tech/md/devops/linux/linux.html" class="nav-link">
  Linux
</a></li><li class="dropdown-item"><!----> <a href="https://www.pdai.tech/md/devops/docker/docker-00-overview.html" class="nav-link">
  Docker
</a></li></ul></div></div><div class="nav-item"><a href="https://www.pdai.tech/md/project/project-x-overview.html" class="nav-link">
  项目
</a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="方法论" class="dropdown-title"><span class="title">方法论</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          理论|流程|协议
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-solid.html" class="nav-link">
  开发原则(SOLID)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-cap.html" class="nav-link">
  分布式理论(CAP)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-base.html" class="nav-link">
  分布式理论(BASE)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-acid.html" class="nav-link">
  事务理论(ACID)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-microservice-kangwei.html" class="nav-link">
  微服务理论(康威定律)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-workflow.html" class="nav-link">
  开发流程详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-opensource.html" class="nav-link">
  开源协议详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/code-style/code-style-alibaba.html" class="nav-link">
  代码规范详解
</a></li></ul></li><li class="dropdown-item"><h4>
          设计模式
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/pattern/1_overview.html" class="nav-link">
  设计模式详解
</a></li></ul></li><li class="dropdown-item"><h4>
          系统认证
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/certificate/cert-cmm.html" class="nav-link">
  CMMI 认证
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/certificate/cert-dengbao.html" class="nav-link">
  等级保护认证
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/certificate/cert-iso27001.html" class="nav-link">
  ISO27001认证
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="产品|团队" class="dropdown-title"><span class="title">产品|团队</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          技术之外
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/team/overview-besides-tech.html" class="nav-link">
  技术之外应该思考什么
</a></li></ul></li><li class="dropdown-item"><h4>
          个人相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/team/team-z-tixi.html" class="nav-link">
  个人成长和认知
</a></li></ul></li><li class="dropdown-item"><h4>
          产品相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/team/team-z-wechat.html" class="nav-link">
  产品设计和思考
</a></li></ul></li><li class="dropdown-item"><h4>
          团队相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/team/team-z-wechat.html" class="nav-link">
  管对管理和成长
</a></li></ul></li><li class="dropdown-item"><h4>
          其它相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/team/team-z-wechat.html" class="nav-link">
  其它软实力等
</a></li></ul></li></ul></div></div><div class="nav-item"><a href="https://www.pdai.tech/md/about/me/about-me.html" class="nav-link">
  关于
</a></div> <!----></nav></div></header> <div class="sidebar-mask"></div> <aside class="sidebar"><nav class="nav-links"><div class="nav-item"><a href="https://www.pdai.tech/md/resource/tools.html" class="nav-link">
  导航
</a></div><div class="nav-item"><a href="https://www.pdai.tech/md/outline/x-outline.html" class="nav-link">
  导读
</a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="Java" class="dropdown-title"><span class="title">Java</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          Java 面向对象和基础
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/basic/java-basic-oop.html" class="nav-link">
  Java 面向对象基础
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/basic/java-basic-lan-basic.html" class="nav-link">
  Java 基础知识体系
</a></li></ul></li><li class="dropdown-item"><h4>
          Java进阶 - 集合框架
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/collection/java-collection-all.html" class="nav-link">
  Java 集合框架详解
</a></li></ul></li><li class="dropdown-item"><h4>
          Java进阶 - 并发框架
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-overview.html" class="nav-link">
  Java 并发知识体系
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html" class="nav-link router-link-exact-active router-link-active" aria-current="page">
  Java 并发理论基础
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-thread-basic.html" class="nav-link">
  Java 并发线程基础
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-overview.html" class="nav-link">
  J.U.C 知识体系与详解
</a></li></ul></li><li class="dropdown-item"><h4>
          Java进阶 - IO框架
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/io/java-io-overview.html" class="nav-link">
  Java IO/NIO/AIO详解
</a></li></ul></li><li class="dropdown-item"><h4>
          Java进阶 - 新版本特性
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/java8/java8.html" class="nav-link">
  Java 8 特性详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/java8up/java-8-up-overview.html" class="nav-link">
  Java 8 以上版本特性体系
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/java8up/java9-11.html" class="nav-link">
  Java 8 升Java 11特性必读
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/java8up/java12-17.html" class="nav-link">
  Java 11 升Java 17特性必读
</a></li></ul></li><li class="dropdown-item"><h4>
          Java进阶 - JVM相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/jvm/java-jvm-classload.html" class="nav-link">
  Java 类加载机制
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/jvm/java-jvm-struct.html" class="nav-link">
  JVM 内存结构详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/jvm/java-jvm-gc.html" class="nav-link">
  JVM 垃圾回收机制
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/java/jvm/java-jvm-debug-tools-linux.html" class="nav-link">
  Java 调试排错相关
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="算法" class="dropdown-title"><span class="title">算法</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          算法基础和思想
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-basic-overview.html" class="nav-link">
  数据结构基础
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-sort-overview.html" class="nav-link">
  常见排序算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-core-divide-and-conquer.html" class="nav-link">
  算法思想
</a></li></ul></li><li class="dropdown-item"><h4>
          一些领域算法
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-security-degist.html" class="nav-link">
  安全算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-char-match.html" class="nav-link">
  字符串匹配算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-distribute-overview.html" class="nav-link">
  分布式系统算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-bigdata-overview.html" class="nav-link">
  海量数据处理
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-load-balance.html" class="nav-link">
  负载均衡算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-suggest.html" class="nav-link">
  推荐算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-machine.html" class="nav-link">
  数据挖掘算法
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-domain-id-snowflake.html" class="nav-link">
  ID生成算法
</a></li></ul></li><li class="dropdown-item"><h4>
          其它算法相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/algorithm/alg-other-mind.html" class="nav-link">
  头脑风暴
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="数据库" class="dropdown-title"><span class="title">数据库</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          数据库基础和原理
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/sql/sql-db.html" class="nav-link">
  数据库原理
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/sql-lan/sql-lan.html" class="nav-link">
  SQL语言
</a></li></ul></li><li class="dropdown-item"><h4>
          SQL 数据库
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/sql-mysql/sql-mysql-overview.html" class="nav-link">
  MySQL 详解
</a></li></ul></li><li class="dropdown-item"><h4>
          NoSQL 数据库
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/nosql-redis/db-redis-overview.html" class="nav-link">
  Redis 详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/nosql-mongo/mongo.html" class="nav-link">
  MongoDB 详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/db/nosql-es/elasticsearch.html" class="nav-link">
  ElasticSearch 详解
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="开发" class="dropdown-title"><span class="title">开发</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          开发 - 常用开发基础
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/package/dev-package-x-overview.html" class="nav-link">
  常用类库详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/regex/dev-regex-all.html" class="nav-link">
  正则表达式详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/cron/dev-cron-x-usage.html" class="nav-link">
  CRON表达式详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/protocol/dev-protocol-overview.html" class="nav-link">
  网络协议和工具详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/security/dev-security-overview.html" class="nav-link">
  安全相关详解
</a></li></ul></li><li class="dropdown-item"><h4>
          开发 - 质量保障
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/ut/dev-ut-unit-test.html" class="nav-link">
  单元测试详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/ut/dev-qt-code-style.html" class="nav-link">
  统一风格详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/ut/dev-qt-sonarlint.html" class="nav-link">
  质量管理详解
</a></li></ul></li><li class="dropdown-item"><h4>
          开发 - 代码重构
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/develop/refactor/dev-refactor-if-else.html" class="nav-link">
  代码重构相关
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="Spring" class="dropdown-title"><span class="title">Spring</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          Spring Framework(v5.3)
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/spring.html" class="nav-link">
  Spring框架知识体系
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/spring-x-framework-introduce.html" class="nav-link">
  Spring框架组成
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/spring-x-framework-ioc.html" class="nav-link">
  控制反转(IOC)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/spring-x-framework-aop.html" class="nav-link">
  向切面编程(AOP)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/spring-x-framework-springmvc.html" class="nav-link">
  SpringMVC
</a></li></ul></li><li class="dropdown-item"><h4>
          SpringBoot系列(v2.5)
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot.html" class="nav-link">
  SpringBoot知识体系
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-hello-world.html" class="nav-link">
  SpringBoot入门
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-interface-response.html" class="nav-link">
  SpringBoot接口设计和实现
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-mysql-jpa.html" class="nav-link">
  SpringBoot集成MySQL
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-mysql-shardingjdbc.html" class="nav-link">
  SpringBoot集成ShardingJDBC
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-redis-jedis.html" class="nav-link">
  SpringBoot集成Redis
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-postgre-jpa.html" class="nav-link">
  SpringBoot集成Postgre
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-elastic-template.html" class="nav-link">
  SpringBoot集成ElasticSearch
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-socket-websocket.html" class="nav-link">
  SpringBoot集成Socket
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-task-timer.html" class="nav-link">
  SpringBoot定时任务
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-view-thymeleaf.html" class="nav-link">
  SpringBoot后端视图
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-x-monitor-actuartor.html" class="nav-link">
  SpringBoot监控
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/spring/springboot/springboot-y-auo-config.html" class="nav-link">
  SpringBoot进阶
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="框架|中间件" class="dropdown-title"><span class="title">框架|中间件</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          Web 容器
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/framework/tomcat/tomcat-overview.html" class="nav-link">
  Tomcat 源码详解
</a></li></ul></li><li class="dropdown-item"><h4>
          ORM 框架
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/framework/orm-mybatis/mybatis-overview.html" class="nav-link">
  MyBatis 源码详解
</a></li></ul></li><li class="dropdown-item"><h4>
          分表分库框架
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/framework/ds-sharding/sharding-overview.html" class="nav-link">
  ShardingSphere 详解
</a></li></ul></li></ul></div></div><div class="nav-item"><a href="https://www.pdai.tech/md/arch/arch-x-overview.html" class="nav-link">
  架构
</a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="工具|部署" class="dropdown-title"><span class="title">工具|部署</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><!----> <a href="https://www.pdai.tech/md/devops/tool/tool-list-overview.html" class="nav-link">
  开发工具
</a></li><li class="dropdown-item"><!----> <a href="https://www.pdai.tech/md/devops/tool/tool-git.html" class="nav-link">
  Git详解
</a></li><li class="dropdown-item"><!----> <a href="https://www.pdai.tech/md/devops/linux/linux.html" class="nav-link">
  Linux
</a></li><li class="dropdown-item"><!----> <a href="https://www.pdai.tech/md/devops/docker/docker-00-overview.html" class="nav-link">
  Docker
</a></li></ul></div></div><div class="nav-item"><a href="https://www.pdai.tech/md/project/project-x-overview.html" class="nav-link">
  项目
</a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="方法论" class="dropdown-title"><span class="title">方法论</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          理论|流程|协议
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-solid.html" class="nav-link">
  开发原则(SOLID)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-cap.html" class="nav-link">
  分布式理论(CAP)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-base.html" class="nav-link">
  分布式理论(BASE)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-acid.html" class="nav-link">
  事务理论(ACID)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-microservice-kangwei.html" class="nav-link">
  微服务理论(康威定律)
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-workflow.html" class="nav-link">
  开发流程详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/spec/dev-opensource.html" class="nav-link">
  开源协议详解
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/code-style/code-style-alibaba.html" class="nav-link">
  代码规范详解
</a></li></ul></li><li class="dropdown-item"><h4>
          设计模式
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/pattern/1_overview.html" class="nav-link">
  设计模式详解
</a></li></ul></li><li class="dropdown-item"><h4>
          系统认证
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/certificate/cert-cmm.html" class="nav-link">
  CMMI 认证
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/certificate/cert-dengbao.html" class="nav-link">
  等级保护认证
</a></li><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/dev-spec/certificate/cert-iso27001.html" class="nav-link">
  ISO27001认证
</a></li></ul></li></ul></div></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="产品|团队" class="dropdown-title"><span class="title">产品|团队</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          技术之外
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/team/overview-besides-tech.html" class="nav-link">
  技术之外应该思考什么
</a></li></ul></li><li class="dropdown-item"><h4>
          个人相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/team/team-z-tixi.html" class="nav-link">
  个人成长和认知
</a></li></ul></li><li class="dropdown-item"><h4>
          产品相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/team/team-z-wechat.html" class="nav-link">
  产品设计和思考
</a></li></ul></li><li class="dropdown-item"><h4>
          团队相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/team/team-z-wechat.html" class="nav-link">
  管对管理和成长
</a></li></ul></li><li class="dropdown-item"><h4>
          其它相关
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="https://www.pdai.tech/md/team/team-z-wechat.html" class="nav-link">
  其它软实力等
</a></li></ul></li></ul></div></div><div class="nav-item"><a href="https://www.pdai.tech/md/about/me/about-me.html" class="nav-link">
  关于
</a></div> <!----></nav>  <ul class="sidebar-links"><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Java 基础</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="https://www.pdai.tech/md/java/basic/java-basic-oop.html" class="sidebar-link">Java 基础 - 面向对象</a></li><li><a href="https://www.pdai.tech/md/java/basic/java-basic-lan-basic.html" class="sidebar-link">Java 基础 - 知识点</a></li><li><a href="https://www.pdai.tech/md/java/basic/java-basic-lan-sum.html" class="sidebar-link">Java 基础 - 图谱 &amp; Q/A</a></li><li><a href="https://www.pdai.tech/md/java/basic/java-basic-x-generic.html" class="sidebar-link">Java 基础 - 泛型机制详解</a></li><li><a href="https://www.pdai.tech/md/java/basic/java-basic-x-annotation.html" class="sidebar-link">Java 基础 - 注解机制详解</a></li><li><a href="https://www.pdai.tech/md/java/basic/java-basic-x-exception.html" class="sidebar-link">Java 基础 - 异常机制详解</a></li><li><a href="https://www.pdai.tech/md/java/basic/java-basic-x-reflection.html" class="sidebar-link">Java 基础 - 反射机制详解</a></li><li><a href="https://www.pdai.tech/md/java/advanced/java-advanced-spi.html" class="sidebar-link">Java常用机制 - SPI机制详解</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Java 集合框架</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="https://www.pdai.tech/md/java/collection/java-collection-all.html" class="sidebar-link">Collection 类关系图</a></li><li><a href="https://www.pdai.tech/md/java/collection/java-collection-ArrayList.html" class="sidebar-link">Collection - ArrayList 源码解析</a></li><li><a href="https://www.pdai.tech/md/java/collection/java-collection-LinkedList.html" class="sidebar-link">Collection - LinkedList源码解析</a></li><li><a href="https://www.pdai.tech/md/java/collection/java-collection-Queue&amp;Stack.html" class="sidebar-link">Collection - Stack &amp; Queue 源码解析</a></li><li><a href="https://www.pdai.tech/md/java/collection/java-collection-PriorityQueue.html" class="sidebar-link">Collection - PriorityQueue源码解析</a></li><li><a href="https://www.pdai.tech/md/java/collection/java-map-HashMap&amp;HashSet.html" class="sidebar-link">Map - HashSet &amp; HashMap 源码解析</a></li><li><a href="https://www.pdai.tech/md/java/collection/java-map-LinkedHashMap&amp;LinkedHashSet.html" class="sidebar-link">Map - LinkedHashSet&amp;Map源码解析</a></li><li><a href="https://www.pdai.tech/md/java/collection/java-map-TreeMap&amp;TreeSet.html" class="sidebar-link">Map - TreeSet &amp; TreeMap 源码解析</a></li><li><a href="https://www.pdai.tech/md/java/collection/java-map-WeakHashMap.html" class="sidebar-link">Map - WeakHashMap源码解析</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading open"><span>Java 多线程与并发</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-overview.html" class="sidebar-link">♥Java并发知识体系详解♥</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html" class="active sidebar-link" aria-current="page">Java 并发 - 理论基础</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-thread-basic.html" class="sidebar-link">Java 并发 - 线程基础</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-key-synchronized.html" class="sidebar-link">关键字: synchronized详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-key-volatile.html" class="sidebar-link">关键字: volatile详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-key-final.html" class="sidebar-link">关键字: final详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-overview.html" class="sidebar-link">JUC - 类汇总和学习指南</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-AtomicInteger.html" class="sidebar-link">JUC原子类: CAS, Unsafe和原子类详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-lock-LockSupport.html" class="sidebar-link">JUC锁: LockSupport详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-lock-AbstractQueuedSynchronizer.html" class="sidebar-link">JUC锁: 锁核心类AQS详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-lock-ReentrantLock.html" class="sidebar-link">JUC锁: ReentrantLock详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-lock-ReentrantReadWriteLock.html" class="sidebar-link">JUC锁: ReentrantReadWriteLock详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-collection-ConcurrentHashMap.html" class="sidebar-link">JUC集合: ConcurrentHashMap详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-collection-CopyOnWriteArrayList.html" class="sidebar-link">JUC集合: CopyOnWriteArrayList详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-collection-ConcurrentLinkedQueue.html" class="sidebar-link">JUC集合: ConcurrentLinkedQueue详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-collection-BlockingQueue.html" class="sidebar-link">JUC集合: BlockingQueue详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-executor-FutureTask.html" class="sidebar-link">JUC线程池: FutureTask详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-executor-ThreadPoolExecutor.html" class="sidebar-link">JUC线程池: ThreadPoolExecutor详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-executor-ScheduledThreadPoolExecutor.html" class="sidebar-link">JUC线程池: ScheduledThreadPoolExecutor详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-executor-ForkJoinPool.html" class="sidebar-link">JUC线程池: Fork/Join框架详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-tool-countdownlatch.html" class="sidebar-link">JUC工具类: CountDownLatch详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-tool-cyclicbarrier.html" class="sidebar-link">JUC工具类: CyclicBarrier详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-tool-semaphore.html" class="sidebar-link">JUC工具类: Semaphore详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-tool-phaser.html" class="sidebar-link">JUC工具类: Phaser详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-tool-exchanger.html" class="sidebar-link">JUC工具类: Exchanger详解</a></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-threadlocal.html" class="sidebar-link">Java 并发 - ThreadLocal详解</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Java IO/NIO/AIO</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="https://www.pdai.tech/md/java/io/java-io-overview.html" class="sidebar-link">♥Java IO知识体系详解♥</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-basic-category.html" class="sidebar-link">Java IO - 分类(传输，操作)</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-basic-design-pattern.html" class="sidebar-link">Java IO - 设计模式(装饰者模式)</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-basic-code-inputstream.html" class="sidebar-link">Java IO - 源码: InputStream</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-basic-code-outputstream.html" class="sidebar-link">Java IO - 源码: OutputStream</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-basic-usage.html" class="sidebar-link">Java IO - 常见类使用</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-model.html" class="sidebar-link">IO 模型 - Unix IO 模型</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-bio.html" class="sidebar-link">Java IO - BIO 详解</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-nio.html" class="sidebar-link">Java NIO - 基础详解</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-nio-select-epoll.html" class="sidebar-link">Java NIO - IO多路复用详解</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-aio.html" class="sidebar-link">Java AIO - 异步IO详解</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-nio-netty.html" class="sidebar-link">Java N(A)IO - 框架: Netty</a></li><li><a href="https://www.pdai.tech/md/java/io/java-io-nio-zerocopy.html" class="sidebar-link">Java NIO - 零拷贝实现</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Java8 特性详解</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="https://www.pdai.tech/md/java/java8/java8.html" class="sidebar-link">♥Java8特性知识体系详解♥</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-stream.html" class="sidebar-link">Java 8 - 函数编程(lambda表达式)</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-optional.html" class="sidebar-link">Java 8 - Optional类深度解析</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-default.html" class="sidebar-link">Java 8 - 默认方法</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-type-anno.html" class="sidebar-link">Java 8 - 类型注解</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-anno-repeat.html" class="sidebar-link">Java 8 - 重复注解</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-type.html" class="sidebar-link">Java 8 - 类型推断优化</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-jre.html" class="sidebar-link">Java 8 - JRE精简</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-permgen.html" class="sidebar-link">Java 8 - 移除Permgen</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-stampedlock.html" class="sidebar-link">Java 8 - StampedLock</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-localdatetime.html" class="sidebar-link">Java 8 - LocalDate/LocalDateTime</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-javafx.html" class="sidebar-link">Java 8 - JavaFx 2.0</a></li><li><a href="https://www.pdai.tech/md/java/java8/java8-others.html" class="sidebar-link">Java 8 - 其它更新: 字符串，base64,...</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Java8 以上特性概述</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="https://www.pdai.tech/md/java/java8up/java-8-up-overview.html" class="sidebar-link">♥Java8+特性知识体系详解♥</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java9-11.html" class="sidebar-link">Java 8 升Java 11 重要特性必读</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java12-17.html" class="sidebar-link">Java 11 升Java 17 重要特性必读</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java9.html" class="sidebar-link">Java 9 新特性概述</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java10.html" class="sidebar-link">Java 10 新特性概述</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java11.html" class="sidebar-link">Java 11 新特性概述</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java12.html" class="sidebar-link">Java 12 新特性概述</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java13.html" class="sidebar-link">Java 13 新特性概述</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java14.html" class="sidebar-link">Java 14 新特性概述</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java15.html" class="sidebar-link">Java 15 新特性概述</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java16.html" class="sidebar-link">Java 16 新特性概述</a></li><li><a href="https://www.pdai.tech/md/java/java8up/java17.html" class="sidebar-link">Java 17 新特性概述</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>JVM相关</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-x-overview.html" class="sidebar-link">♥JVM相关知识体系详解♥</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-class.html" class="sidebar-link">JVM 基础 - 类字节码详解</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-classload.html" class="sidebar-link">JVM 基础 - Java 类加载机制</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-struct.html" class="sidebar-link">JVM 基础 - JVM 内存结构</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-x-introduce.html" class="sidebar-link">JVM 基础 - Java 内存模型引入</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-jmm.html" class="sidebar-link">JVM 基础 - Java 内存模型详解</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-gc.html" class="sidebar-link">GC - Java 垃圾回收基础知识</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-gc-g1.html" class="sidebar-link">GC - Java 垃圾回收器之G1详解</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-gc-zgc.html" class="sidebar-link">GC - Java 垃圾回收器之ZGC详解</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-cms-gc.html" class="sidebar-link">GC - Java 垃圾回收器之CMS GC问题分析与解决</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-param.html" class="sidebar-link">调试排错 - JVM 调优参数</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-oom.html" class="sidebar-link">调试排错 - Java 内存分析之堆内存和MetaSpace内存</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-oom-offheap.html" class="sidebar-link">调试排错 - Java 内存分析之堆外内存</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-thread-dump.html" class="sidebar-link">调试排错 - Java 线程分析之线程Dump分析</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-debug-tools-linux.html" class="sidebar-link">调试排错 - Java 问题排查之Linux命令</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-debug-tools-list.html" class="sidebar-link">调试排错 - Java 问题排查之工具单</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-oom-tool.html" class="sidebar-link">调试排错 - Java 问题排查之JVM可视化工具</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-agent-arthas.html" class="sidebar-link">调试排错 - Java 问题排查之应用在线调试Arthas</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-debug-idea.html" class="sidebar-link">调试排错 - Java 问题排查之使用IDEA本地调试和远程调试</a></li><li><a href="https://www.pdai.tech/md/java/jvm/java-jvm-agent-usage.html" class="sidebar-link">调试排错 - Java动态调试技术原理</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Java其它相关</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="https://www.pdai.tech/md/java/others/java-others-awesome-java.html" class="sidebar-link">Awesome Java</a></li><li><a href="https://www.pdai.tech/md/java/others/java-others-better-java.html" class="sidebar-link">Better Java</a></li></ul></section></li></ul> </aside> <div style="height: auto !important;"><main class="page" style="height: auto !important;"> <div class="theme-default-content content__default"><h1 id="java-并发---理论基础"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#java-%E5%B9%B6%E5%8F%91---%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80" class="header-anchor">¶</a> Java 并发 - 理论基础</h1> <blockquote><p>本文从理论的角度引入并发安全问题以及JMM应对并发问题的原理。@pdai</p></blockquote> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#java-%e5%b9%b6%e5%8f%91---%e7%90%86%e8%ae%ba%e5%9f%ba%e7%a1%80">Java 并发 - 理论基础</a> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%e5%b8%a6%e7%9d%80bat%e5%a4%a7%e5%8e%82%e7%9a%84%e9%9d%a2%e8%af%95%e9%97%ae%e9%a2%98%e5%8e%bb%e7%90%86%e8%a7%a3">带着BAT大厂的面试问题去理解</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%a4%9a%e7%ba%bf%e7%a8%8b">为什么需要多线程</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%e7%ba%bf%e7%a8%8b%e4%b8%8d%e5%ae%89%e5%85%a8%e7%a4%ba%e4%be%8b">线程不安全示例</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%e5%b9%b6%e5%8f%91%e5%87%ba%e7%8e%b0%e9%97%ae%e9%a2%98%e7%9a%84%e6%a0%b9%e6%ba%90-%e5%b9%b6%e5%8f%91%e4%b8%89%e8%a6%81%e7%b4%a0">并发出现问题的根源: 并发三要素</a> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%e5%8f%af%e8%a7%81%e6%80%a7-cpu%e7%bc%93%e5%ad%98%e5%bc%95%e8%b5%b7">可见性: CPU缓存引起</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%e5%8e%9f%e5%ad%90%e6%80%a7-%e5%88%86%e6%97%b6%e5%a4%8d%e7%94%a8%e5%bc%95%e8%b5%b7">原子性: 分时复用引起</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%e6%9c%89%e5%ba%8f%e6%80%a7-%e9%87%8d%e6%8e%92%e5%ba%8f%e5%bc%95%e8%b5%b7">有序性: 重排序引起</a></li></ul></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#java%e6%98%af%e6%80%8e%e4%b9%88%e8%a7%a3%e5%86%b3%e5%b9%b6%e5%8f%91%e9%97%ae%e9%a2%98%e7%9a%84-jmmjava%e5%86%85%e5%ad%98%e6%a8%a1%e5%9e%8b">JAVA是怎么解决并发问题的: JMM(Java内存模型)</a> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%e5%85%b3%e9%94%ae%e5%ad%97-volatilesynchronized-%e5%92%8c-final">关键字: volatile、synchronized 和 final</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#happens-before-%e8%a7%84%e5%88%99">Happens-Before 规则</a> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#1-%e5%8d%95%e4%b8%80%e7%ba%bf%e7%a8%8b%e5%8e%9f%e5%88%99">1. 单一线程原则</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#2-%e7%ae%a1%e7%a8%8b%e9%94%81%e5%ae%9a%e8%a7%84%e5%88%99">2. 管程锁定规则</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#3-volatile-%e5%8f%98%e9%87%8f%e8%a7%84%e5%88%99">3. volatile 变量规则</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#4-%e7%ba%bf%e7%a8%8b%e5%90%af%e5%8a%a8%e8%a7%84%e5%88%99">4. 线程启动规则</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#5-%e7%ba%bf%e7%a8%8b%e5%8a%a0%e5%85%a5%e8%a7%84%e5%88%99">5. 线程加入规则</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#6-%e7%ba%bf%e7%a8%8b%e4%b8%ad%e6%96%ad%e8%a7%84%e5%88%99">6. 线程中断规则</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#7-%e5%af%b9%e8%b1%a1%e7%bb%88%e7%bb%93%e8%a7%84%e5%88%99">7. 对象终结规则</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#8-%e4%bc%a0%e9%80%92%e6%80%a7">8. 传递性</a></li></ul></li></ul></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8-%e4%b8%8d%e6%98%af%e4%b8%80%e4%b8%aa%e9%9d%9e%e7%9c%9f%e5%8d%b3%e5%81%87%e7%9a%84%e5%91%bd%e9%a2%98">线程安全: 不是一个非真即假的命题</a> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#1-%e4%b8%8d%e5%8f%af%e5%8f%98">1. 不可变</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#2-%e7%bb%9d%e5%af%b9%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8">2. 绝对线程安全</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#3-%e7%9b%b8%e5%af%b9%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8">3. 相对线程安全</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#4-%e7%ba%bf%e7%a8%8b%e5%85%bc%e5%ae%b9">4. 线程兼容</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#5-%e7%ba%bf%e7%a8%8b%e5%af%b9%e7%ab%8b">5. 线程对立</a></li></ul></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e7%9a%84%e5%ae%9e%e7%8e%b0%e6%96%b9%e6%b3%95">线程安全的实现方法</a> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#1-%e4%ba%92%e6%96%a5%e5%90%8c%e6%ad%a5">1. 互斥同步</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#2-%e9%9d%9e%e9%98%bb%e5%a1%9e%e5%90%8c%e6%ad%a5">2. 非阻塞同步</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#3-%e6%97%a0%e5%90%8c%e6%ad%a5%e6%96%b9%e6%a1%88">3. 无同步方案</a></li></ul></li></ul></li></ul> <h2 id="带着bat大厂的面试问题去理解"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%B8%A6%E7%9D%80bat%E5%A4%A7%E5%8E%82%E7%9A%84%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E5%8E%BB%E7%90%86%E8%A7%A3" class="header-anchor">¶</a> 带着BAT大厂的面试问题去理解</h2> <div class="custom-block tip"><p class="custom-block-title">TIP</p> <p>请带着这些问题继续后文，会很大程度上帮助你更好的理解并发理论基础。@pdai</p></div> <ul><li>多线程的出现是要解决什么问题的?</li> <li>线程不安全是指什么? 举例说明</li> <li>并发出现线程不安全的本质什么? 可见性，原子性和有序性。</li> <li>Java是怎么解决并发问题的? 3个关键字，JMM和8个Happens-Before</li> <li>线程安全是不是非真即假? 不是</li> <li>线程安全有哪些实现思路?</li> <li>如何理解并发和并行的区别?</li></ul> <h2 id="为什么需要多线程"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%A4%9A%E7%BA%BF%E7%A8%8B" class="header-anchor">¶</a> 为什么需要多线程</h2> <p>众所周知，CPU、内存、I/O 设备的速度是有极大差异的，为了合理利用 CPU 的高性能，平衡这三者的速度差异，计算机体系结构、操作系统、编译程序都做出了贡献，主要体现为:</p> <ul><li>CPU 增加了缓存，以均衡与内存的速度差异；// 导致 <code>可见性</code>问题</li> <li>操作系统增加了进程、线程，以分时复用 CPU，进而均衡 CPU 与 I/O 设备的速度差异；// 导致 <code>原子性</code>问题</li> <li>编译程序优化指令执行次序，使得缓存能够得到更加合理地利用。// 导致 <code>有序性</code>问题</li></ul> <h2 id="线程不安全示例"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8%E7%A4%BA%E4%BE%8B" class="header-anchor">¶</a> 线程不安全示例</h2> <p>如果多个线程对同一个共享数据进行访问而不采取同步操作的话，那么操作的结果是不一致的。</p> <p>以下代码演示了 1000 个线程同时对 cnt 执行自增操作，操作结束之后它的值有可能小于 1000。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadUnsafeExample</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cnt<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> cnt<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> threadSize <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>
    <span class="token class-name">ThreadUnsafeExample</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadUnsafeExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span>threadSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> threadSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            example<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-html line-numbers-mode"><pre class="language-html code-copy-added"><code>997 // 结果总是小于1000
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="并发出现问题的根源-并发三要素"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%B9%B6%E5%8F%91%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E6%A0%B9%E6%BA%90-%E5%B9%B6%E5%8F%91%E4%B8%89%E8%A6%81%E7%B4%A0" class="header-anchor">¶</a> 并发出现问题的根源: 并发三要素</h2> <p>上述代码输出为什么不是1000? 并发出现问题的根源是什么?</p> <h3 id="可见性-cpu缓存引起"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%8F%AF%E8%A7%81%E6%80%A7-cpu%E7%BC%93%E5%AD%98%E5%BC%95%E8%B5%B7" class="header-anchor">¶</a> 可见性: CPU缓存引起</h3> <p>可见性：一个线程对共享变量的修改，另外一个线程能够立刻看到。</p> <p>举个简单的例子，看下面这段代码：</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token comment">//线程1执行的代码</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
 
<span class="token comment">//线程2执行的代码</span>
j <span class="token operator">=</span> i<span class="token punctuation">;</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>假若执行线程1的是CPU1，执行线程2的是CPU2。由上面的分析可知，当线程1执行 i =10这句时，会先把i的初始值加载到CPU1的高速缓存中，然后赋值为10，那么在CPU1的高速缓存当中i的值变为10了，却没有立即写入到主存当中。</p> <p>此时线程2执行 j = i，它会先去主存读取i的值并加载到CPU2的缓存当中，注意此时内存当中i的值还是0，那么就会使得j的值为0，而不是10.</p> <p>这就是可见性问题，线程1对变量i修改了之后，线程2没有立即看到线程1修改的值。</p> <h3 id="原子性-分时复用引起"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%8E%9F%E5%AD%90%E6%80%A7-%E5%88%86%E6%97%B6%E5%A4%8D%E7%94%A8%E5%BC%95%E8%B5%B7" class="header-anchor">¶</a> 原子性: 分时复用引起</h3> <p>原子性：即一个操作或者多个操作 要么全部执行并且执行的过程不会被任何因素打断，要么就都不执行。</p> <p>经典的<strong>转账问题</strong>：比如从账户A向账户B转1000元，那么必然包括2个操作：从账户A减去1000元，往账户B加上1000元。</p> <p>试想一下，如果这2个操作不具备原子性，会造成什么样的后果。假如从账户A减去1000元之后，操作突然中止。然后又从B取出了500元，取出500元之后，再执行 往账户B加上1000元 的操作。这样就会导致账户A虽然减去了1000元，但是账户B没有收到这个转过来的1000元。</p> <p>所以这2个操作必须要具备原子性才能保证不出现一些意外的问题。</p> <h3 id="有序性-重排序引起"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E6%9C%89%E5%BA%8F%E6%80%A7-%E9%87%8D%E6%8E%92%E5%BA%8F%E5%BC%95%E8%B5%B7" class="header-anchor">¶</a> 有序性: 重排序引起</h3> <p>有序性：即程序执行的顺序按照代码的先后顺序执行。举个简单的例子，看下面这段代码：</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added" style=""><code><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>              
<span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token comment">//语句1  </span>
flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>          <span class="token comment">//语句2</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>上面代码定义了一个int型变量，定义了一个boolean类型变量，然后分别对两个变量进行赋值操作。从代码顺序上看，语句1是在语句2前面的，那么JVM在真正执行这段代码的时候会保证语句1一定会在语句2前面执行吗? 不一定，为什么呢? 这里可能会发生指令重排序（Instruction Reorder）。</p> <p>在执行程序时为了提高性能，编译器和处理器常常会对指令做重排序。重排序分三种类型：</p> <ul><li>编译器优化的重排序。编译器在不改变单线程程序语义的前提下，可以重新安排语句的执行顺序。</li> <li>指令级并行的重排序。现代处理器采用了指令级并行技术（Instruction-Level Parallelism， ILP）来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。</li> <li>内存系统的重排序。由于处理器使用缓存和读 / 写缓冲区，这使得加载和存储操作看上去可能是在乱序执行。</li></ul> <p>从 java 源代码到最终实际执行的指令序列，会分别经历下面三种重排序：</p> <p><img alt="" data-src="https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/jvm/java-jmm-3.png" loading="lazy" class="lazy medium-zoom-image" src="./command_files/java-jmm-3.png"></p> <p>上述的 1 属于编译器重排序，2 和 3 属于处理器重排序。这些重排序都可能会导致多线程程序出现内存可见性问题。对于编译器，JMM 的编译器重排序规则会禁止特定类型的编译器重排序（不是所有的编译器重排序都要禁止）。对于处理器重排序，JMM 的处理器重排序规则会要求 java 编译器在生成指令序列时，插入特定类型的内存屏障（memory barriers，intel 称之为 memory fence）指令，通过内存屏障指令来禁止特定类型的处理器重排序（不是所有的处理器重排序都要禁止）。</p> <p>具体可以参看：<a href="https://www.pdai.tech/md/java/jvm/java-jvm-jmm.html" class="">Java 内存模型详解</a>的重排序章节。</p> <h2 id="java是怎么解决并发问题的-jmmjava内存模型"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#java%E6%98%AF%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98%E7%9A%84-jmmjava%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B" class="header-anchor">¶</a> JAVA是怎么解决并发问题的: JMM(Java内存模型)</h2> <p>Java 内存模型是个很复杂的规范，强烈推荐你看后续（应该是网上能找到最好的材料之一了）：<a href="https://www.pdai.tech/md/java/jvm/java-jvm-jmm.html" class="">Java 内存模型详解</a>。</p> <p><strong>理解的第一个维度：核心知识点</strong></p> <p>JMM本质上可以理解为，Java 内存模型规范了 JVM 如何提供按需禁用缓存和编译优化的方法。具体来说，这些方法包括：</p> <ul><li>volatile、synchronized 和 final 三个关键字</li> <li>Happens-Before 规则</li></ul> <p><strong>理解的第二个维度：可见性，有序性，原子性</strong></p> <ul><li>原子性</li></ul> <p>在Java中，对基本数据类型的变量的读取和赋值操作是原子性操作，即这些操作是不可被中断的，要么执行，要么不执行。
请分析以下哪些操作是原子性操作：</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code>x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token comment">//语句1: 直接将数值10赋值给x，也就是说线程执行这个语句的会直接将数值10写入到工作内存中</span>
y <span class="token operator">=</span> x<span class="token punctuation">;</span>         <span class="token comment">//语句2: 包含2个操作，它先要去读取x的值，再将x的值写入工作内存，虽然读取x的值以及 将x的值写入工作内存 这2个操作都是原子性操作，但是合起来就不是原子性操作了。</span>
x<span class="token operator">++</span><span class="token punctuation">;</span>           <span class="token comment">//语句3： x++包括3个操作：读取x的值，进行加1操作，写入新的值。</span>
x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">//语句4： 同语句3</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>上面4个语句只有语句1的操作具备原子性。</p> <p>也就是说，只有简单的读取、赋值（而且必须是将数字赋值给某个变量，变量之间的相互赋值不是原子操作）才是原子操作。</p> <blockquote><p>从上面可以看出，Java内存模型只保证了基本读取和赋值是原子性操作，如果要实现更大范围操作的原子性，可以通过synchronized和Lock来实现。由于synchronized和Lock能够保证任一时刻只有一个线程执行该代码块，那么自然就不存在原子性问题了，从而保证了原子性。</p></blockquote> <ul><li>可见性</li></ul> <p>Java提供了volatile关键字来保证可见性。</p> <p>当一个共享变量被volatile修饰时，它会保证修改的值会立即被更新到主存，当有其他线程需要读取时，它会去内存中读取新值。</p> <p>而普通的共享变量不能保证可见性，因为普通共享变量被修改之后，什么时候被写入主存是不确定的，当其他线程去读取时，此时内存中可能还是原来的旧值，因此无法保证可见性。</p> <blockquote><p>另外，通过synchronized和Lock也能够保证可见性，synchronized和Lock能保证同一时刻只有一个线程获取锁然后执行同步代码，并且在释放锁之前会将对变量的修改刷新到主存当中。因此可以保证可见性。</p></blockquote> <ul><li>有序性</li></ul> <p>在Java里面，可以通过volatile关键字来保证一定的“有序性”（具体原理在下一节讲述）。另外可以通过synchronized和Lock来保证有序性，很显然，synchronized和Lock保证每个时刻是有一个线程执行同步代码，相当于是让线程顺序执行同步代码，自然就保证了有序性。当然JMM是通过Happens-Before 规则来保证有序性的。</p> <h3 id="关键字-volatile、synchronized-和-final"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%85%B3%E9%94%AE%E5%AD%97-volatile%E3%80%81synchronized-%E5%92%8C-final" class="header-anchor">¶</a> 关键字: volatile、synchronized 和 final</h3> <p>以下三篇文章详细分析了这三个关键字：</p> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-key-synchronized.html" class="">关键字: synchronized详解</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-key-volatile.html" class="">关键字: volatile详解</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-key-final.html" class="">关键字: final详解</a></li></ul> <h3 id="happens-before-规则"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#happens-before-%E8%A7%84%E5%88%99" class="header-anchor">¶</a> Happens-Before 规则</h3> <p>上面提到了可以用 volatile 和 synchronized 来保证有序性。除此之外，JVM 还规定了先行发生原则，让一个操作无需控制就能先于另一个操作完成。</p> <h4 id="1-单一线程原则"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#1-%E5%8D%95%E4%B8%80%E7%BA%BF%E7%A8%8B%E5%8E%9F%E5%88%99" class="header-anchor">¶</a> 1. 单一线程原则</h4> <blockquote><p>Single Thread rule</p></blockquote> <p>在一个线程内，在程序前面的操作先行发生于后面的操作。</p> <p><img alt="image" data-src="/_images/pics/single-thread-rule.png" loading="lazy" class="lazy medium-zoom-image" src="./command_files/single-thread-rule.png"></p> <h4 id="2-管程锁定规则"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#2-%E7%AE%A1%E7%A8%8B%E9%94%81%E5%AE%9A%E8%A7%84%E5%88%99" class="header-anchor">¶</a> 2. 管程锁定规则</h4> <blockquote><p>Monitor Lock Rule</p></blockquote> <p>一个 unlock 操作先行发生于后面对同一个锁的 lock 操作。</p> <p><img alt="image" data-src="/_images/pics/monitor-lock-rule.png" loading="lazy" class="lazy medium-zoom-image" src="./command_files/monitor-lock-rule.png"></p> <h4 id="3-volatile-变量规则"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#3-volatile-%E5%8F%98%E9%87%8F%E8%A7%84%E5%88%99" class="header-anchor">¶</a> 3. volatile 变量规则</h4> <blockquote><p>Volatile Variable Rule</p></blockquote> <p>对一个 volatile 变量的写操作先行发生于后面对这个变量的读操作。</p> <p><img alt="image" data-src="/_images/pics/volatile-variable-rule.png" loading="lazy" class="lazy medium-zoom-image" src="./command_files/volatile-variable-rule.png"></p> <h4 id="4-线程启动规则"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#4-%E7%BA%BF%E7%A8%8B%E5%90%AF%E5%8A%A8%E8%A7%84%E5%88%99" class="header-anchor">¶</a> 4. 线程启动规则</h4> <blockquote><p>Thread Start Rule</p></blockquote> <p>Thread 对象的 start() 方法调用先行发生于此线程的每一个动作。</p> <p><img alt="image" data-src="/_images/pics/thread-start-rule.png" loading="lazy" class="lazy medium-zoom-image" src="./command_files/thread-start-rule.png"></p> <h4 id="5-线程加入规则"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#5-%E7%BA%BF%E7%A8%8B%E5%8A%A0%E5%85%A5%E8%A7%84%E5%88%99" class="header-anchor">¶</a> 5. 线程加入规则</h4> <blockquote><p>Thread Join Rule</p></blockquote> <p>Thread 对象的结束先行发生于 join() 方法返回。</p> <p><img alt="image" data-src="/_images/pics/thread-join-rule.png" loading="lazy" class="lazy medium-zoom-image" src="./command_files/thread-join-rule.png"></p> <h4 id="6-线程中断规则"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#6-%E7%BA%BF%E7%A8%8B%E4%B8%AD%E6%96%AD%E8%A7%84%E5%88%99" class="header-anchor">¶</a> 6. 线程中断规则</h4> <blockquote><p>Thread Interruption Rule</p></blockquote> <p>对线程 interrupt() 方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过 interrupted() 方法检测到是否有中断发生。</p> <h4 id="7-对象终结规则"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#7-%E5%AF%B9%E8%B1%A1%E7%BB%88%E7%BB%93%E8%A7%84%E5%88%99" class="header-anchor">¶</a> 7. 对象终结规则</h4> <blockquote><p>Finalizer Rule</p></blockquote> <p>一个对象的初始化完成(构造函数执行结束)先行发生于它的 finalize() 方法的开始。</p> <h4 id="8-传递性"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#8-%E4%BC%A0%E9%80%92%E6%80%A7" class="header-anchor">¶</a> 8. 传递性</h4> <blockquote><p>Transitivity</p></blockquote> <p>如果操作 A 先行发生于操作 B，操作 B 先行发生于操作 C，那么操作 A 先行发生于操作 C。</p> <h2 id="线程安全-不是一个非真即假的命题"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8-%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E9%9D%9E%E7%9C%9F%E5%8D%B3%E5%81%87%E7%9A%84%E5%91%BD%E9%A2%98" class="header-anchor">¶</a> 线程安全: 不是一个非真即假的命题</h2> <p>一个类在可以被多个线程安全调用时就是线程安全的。</p> <p>线程安全不是一个非真即假的命题，可以将共享数据按照安全程度的强弱顺序分成以下五类: 不可变、绝对线程安全、相对线程安全、线程兼容和线程对立。</p> <h3 id="1-不可变"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#1-%E4%B8%8D%E5%8F%AF%E5%8F%98" class="header-anchor">¶</a> 1. 不可变</h3> <p>不可变(Immutable)的对象一定是线程安全的，不需要再采取任何的线程安全保障措施。只要一个不可变的对象被正确地构建出来，永远也不会看到它在多个线程之中处于不一致的状态。</p> <p>多线程环境下，应当尽量使对象成为不可变，来满足线程安全。</p> <p>不可变的类型:</p> <ul><li>final 关键字修饰的基本数据类型</li> <li>String</li> <li>枚举类型</li> <li>Number 部分子类，如 Long 和 Double 等数值包装类型，BigInteger 和 BigDecimal 等大数据类型。但同为 Number 的原子类 AtomicInteger 和 AtomicLong 则是可变的。</li></ul> <p>对于集合类型，可以使用 Collections.unmodifiableXXX() 方法来获取一个不可变的集合。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImmutableExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> unmodifiableMap <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        unmodifiableMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-html line-numbers-mode"><pre class="language-html code-copy-added"><code>Exception in thread "main" java.lang.UnsupportedOperationException
    at java.util.Collections$UnmodifiableMap.put(Collections.java:1457)
    at ImmutableExample.main(ImmutableExample.java:9)
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Collections.unmodifiableXXX() 先对原始的集合进行拷贝，需要对集合进行修改的方法都直接抛出异常。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="2-绝对线程安全"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#2-%E7%BB%9D%E5%AF%B9%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8" class="header-anchor">¶</a> 2. 绝对线程安全</h3> <p>不管运行时环境如何，调用者都不需要任何额外的同步措施。</p> <h3 id="3-相对线程安全"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#3-%E7%9B%B8%E5%AF%B9%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8" class="header-anchor">¶</a> 3. 相对线程安全</h3> <p>相对线程安全需要保证对这个对象单独的操作是线程安全的，在调用的时候不需要做额外的保障措施。但是对于一些特定顺序的连续调用，就可能需要在调用端使用额外的同步手段来保证调用的正确性。</p> <p>在 Java 语言中，大部分的线程安全类都属于这种类型，例如 Vector、HashTable、Collections 的 synchronizedCollection() 方法包装的集合等。</p> <p>对于下面的代码，如果删除元素的线程删除了 Vector 的一个元素，而获取元素的线程试图访问一个已经被删除的元素，那么就会抛出 ArrayIndexOutOfBoundsException。</p> <div class="language-Java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VectorUnsafeExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> vector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                vector<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vector<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    vector<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vector<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    vector<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="language-html line-numbers-mode"><pre class="language-html code-copy-added"><code>Exception in thread "Thread-159738" java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 3
    at java.util.Vector.remove(Vector.java:831)
    at VectorUnsafeExample.lambda$main$0(VectorUnsafeExample.java:14)
    at VectorUnsafeExample$$Lambda$1/713338599.run(Unknown Source)
    at java.lang.Thread.run(Thread.java:745)
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>如果要保证上面的代码能正确执行下去，就需要对删除元素和获取元素的代码进行同步。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code>executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>vector<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vector<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            vector<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>vector<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vector<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            vector<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="4-线程兼容"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#4-%E7%BA%BF%E7%A8%8B%E5%85%BC%E5%AE%B9" class="header-anchor">¶</a> 4. 线程兼容</h3> <p>线程兼容是指对象本身并不是线程安全的，但是可以通过在调用端正确地使用同步手段来保证对象在并发环境中可以安全地使用，我们平常说一个类不是线程安全的，绝大多数时候指的是这一种情况。Java API 中大部分的类都是属于线程兼容的，如与前面的 Vector 和 HashTable 相对应的集合类 ArrayList 和 HashMap 等。</p> <h3 id="5-线程对立"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#5-%E7%BA%BF%E7%A8%8B%E5%AF%B9%E7%AB%8B" class="header-anchor">¶</a> 5. 线程对立</h3> <p>线程对立是指无论调用端是否采取了同步措施，都无法在多线程环境中并发使用的代码。由于 Java 语言天生就具备多线程特性，线程对立这种排斥多线程的代码是很少出现的，而且通常都是有害的，应当尽量避免。</p> <h2 id="线程安全的实现方法"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95" class="header-anchor">¶</a> 线程安全的实现方法</h2> <h3 id="1-互斥同步"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#1-%E4%BA%92%E6%96%A5%E5%90%8C%E6%AD%A5" class="header-anchor">¶</a> 1. 互斥同步</h3> <p>synchronized 和 ReentrantLock。</p> <p>初步了解你可以看：</p> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-thread-basic.html#%E7%BA%BF%E7%A8%8B%E4%BA%92%E6%96%A5%E5%90%8C%E6%AD%A5" class="">Java 并发 - 线程基础：线程互斥同步</a></li></ul> <p>详细分析请看：</p> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-key-synchronized.html" class="">关键字: Synchronized详解</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-lock-ReentrantLock.html" class="">JUC锁: ReentrantLock详解</a></li></ul> <h3 id="2-非阻塞同步"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#2-%E9%9D%9E%E9%98%BB%E5%A1%9E%E5%90%8C%E6%AD%A5" class="header-anchor">¶</a> 2. 非阻塞同步</h3> <p>互斥同步最主要的问题就是线程阻塞和唤醒所带来的性能问题，因此这种同步也称为阻塞同步。</p> <p>互斥同步属于一种悲观的并发策略，总是认为只要不去做正确的同步措施，那就肯定会出现问题。无论共享数据是否真的会出现竞争，它都要进行加锁(这里讨论的是概念模型，实际上虚拟机会优化掉很大一部分不必要的加锁)、用户态核心态转换、维护锁计数器和检查是否有被阻塞的线程需要唤醒等操作。</p> <p><strong>(一)CAS</strong></p> <p>随着硬件指令集的发展，我们可以使用基于冲突检测的乐观并发策略: 先进行操作，如果没有其它线程争用共享数据，那操作就成功了，否则采取补偿措施(不断地重试，直到成功为止)。这种乐观的并发策略的许多实现都不需要将线程阻塞，因此这种同步操作称为非阻塞同步。</p> <p>乐观锁需要操作和冲突检测这两个步骤具备原子性，这里就不能再使用互斥同步来保证了，只能靠硬件来完成。硬件支持的原子性操作最典型的是: 比较并交换(Compare-and-Swap，CAS)。CAS 指令需要有 3 个操作数，分别是内存地址 V、旧的预期值 A 和新值 B。当执行操作时，只有当 V 的值等于 A，才将 V 的值更新为 B。</p> <p><strong>(二)AtomicInteger</strong></p> <p>J.U.C 包里面的整数原子类 AtomicInteger，其中的 compareAndSet() 和 getAndIncrement() 等方法都使用了 Unsafe 类的 CAS 操作。</p> <p>以下代码使用了 AtomicInteger 执行了自增的操作。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">private</span> <span class="token class-name">AtomicInteger</span> cnt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cnt<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>以下代码是 incrementAndGet() 的源码，它调用了 unsafe 的 getAndAddInt() 。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">getAndAddInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>以下代码是 getAndAddInt() 源码，var1 指示对象内存地址，var2 指示该字段相对对象内存地址的偏移，var4 指示操作需要加的数值，这里为 1。通过 getIntVolatile(var1, var2) 得到旧的预期值，通过调用 compareAndSwapInt() 来进行 CAS 比较，如果该字段内存地址中的值等于 var5，那么就更新内存地址为 var1+var2 的变量为 var5+var4。</p> <p>可以看到 getAndAddInt() 在一个循环中进行，发生冲突的做法是不断的进行重试。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndAddInt</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">,</span> <span class="token keyword">long</span> var2<span class="token punctuation">,</span> <span class="token keyword">int</span> var4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> var5<span class="token punctuation">;</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        var5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getIntVolatile</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> var5 <span class="token operator">+</span> var4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> var5<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>(三)ABA</strong></p> <p>如果一个变量初次读取的时候是 A 值，它的值被改成了 B，后来又被改回为 A，那 CAS 操作就会误认为它从来没有被改变过。</p> <p>J.U.C 包提供了一个带有标记的原子引用类 AtomicStampedReference 来解决这个问题，它可以通过控制变量值的版本来保证 CAS 的正确性。大部分情况下 ABA 问题不会影响程序并发的正确性，如果需要解决 ABA 问题，改用传统的互斥同步可能会比原子类更高效。</p> <p>CAS, Unsafe和原子类详细分析请看：</p> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-AtomicInteger.html" class="">JUC原子类: CAS, Unsafe和原子类详解</a></li></ul> <h3 id="3-无同步方案"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#3-%E6%97%A0%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88" class="header-anchor">¶</a> 3. 无同步方案</h3> <p>要保证线程安全，并不是一定就要进行同步。如果一个方法本来就不涉及共享数据，那它自然就无须任何同步措施去保证正确性。</p> <p><strong>(一)栈封闭</strong></p> <p>多个线程访问同一个方法的局部变量时，不会出现线程安全问题，因为局部变量存储在虚拟机栈中，属于线程私有的。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ExecutorService</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StackClosedExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add100</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cnt<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">StackClosedExample</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackClosedExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> example<span class="token punctuation">.</span><span class="token function">add100</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> example<span class="token punctuation">.</span><span class="token function">add100</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-html line-numbers-mode"><pre class="language-html code-copy-added"><code>100
100
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>更详细的分析请看J.U.C中线程池相关内容详解：</p> <ul><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-executor-FutureTask.html" class="">JUC线程池: FutureTask详解</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-executor-ThreadPoolExecutor.html" class="">JUC线程池: ThreadPoolExecutor详解</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-executor-ScheduledThreadPoolExecutor.html" class="">JUC线程池: ScheduledThreadPool详解</a></li> <li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-executor-ForkJoinPool.html" class="">JUC线程池: Fork/Join框架详解</a></li></ul> <p><strong>(二)线程本地存储(Thread Local Storage)</strong></p> <p>如果一段代码中所需要的数据必须与其他代码共享，那就看看这些共享数据的代码是否能保证在同一个线程中执行。如果能保证，我们就可以把共享数据的可见范围限制在同一个线程之内，这样，无须同步也能保证线程之间不出现数据争用的问题。</p> <p>符合这种特点的应用并不少见，大部分使用消费队列的架构模式(如“生产者-消费者”模式)都会将产品的消费过程尽量在一个线程中消费完。其中最重要的一个应用实例就是经典 Web 交互模型中的“一个请求对应一个服务器线程”(Thread-per-Request)的处理方式，这种处理方式的广泛应用使得很多 Web 服务端应用都可以使用线程本地存储来解决线程安全问题。</p> <p>可以使用 java.lang.ThreadLocal 类来实现线程本地存储功能。</p> <p>对于以下代码，thread1 中设置 threadLocal 为 1，而 thread2 设置 threadLocal 为 2。过了一段时间之后，thread1 读取 threadLocal 依然是 1，不受 thread2 的影响。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadLocalExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThreadLocal</span> threadLocal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            threadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>threadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            threadLocal<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span> thread2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            threadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            threadLocal<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>输出结果</p> <div class="language-html line-numbers-mode"><pre class="language-html code-copy-added"><code>1
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>为了理解 ThreadLocal，先看以下代码:</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadLocalExample1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThreadLocal</span> threadLocal1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ThreadLocal</span> threadLocal2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            threadLocal1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            threadLocal2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span> thread2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            threadLocal1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            threadLocal2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>它所对应的底层结构图为:</p> <p><img alt="image" data-src="/_images/pics/3646544a-cb57-451d-9e03-d3c4f5e4434a.png" loading="lazy" class="lazy medium-zoom-image" src="./command_files/3646544a-cb57-451d-9e03-d3c4f5e4434a.png"></p> <p>每个 Thread 都有一个 ThreadLocal.ThreadLocalMap 对象，Thread 类中就定义了 ThreadLocal.ThreadLocalMap 成员。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token comment">/* ThreadLocal values pertaining to this thread. This map is maintained
 * by the ThreadLocal class. */</span>
<span class="token class-name">ThreadLocal<span class="token punctuation">.</span>ThreadLocalMap</span> threadLocals <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>当调用一个 ThreadLocal 的 set(T value) 方法时，先得到当前线程的 ThreadLocalMap 对象，然后将 ThreadLocal-&gt;value 键值对插入到该 Map 中。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">T</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ThreadLocalMap</span> map <span class="token operator">=</span> <span class="token function">getMap</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token function">createMap</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>get() 方法类似。</p> <div class="language-java line-numbers-mode"><pre class="language-java code-copy-added"><code><span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ThreadLocalMap</span> map <span class="token operator">=</span> <span class="token function">getMap</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThreadLocalMap<span class="token punctuation">.</span>Entry</span> e <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">getEntry</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unchecked"</span><span class="token punctuation">)</span>
            <span class="token class-name">T</span> result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">setInitialValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code><div data-v-49140617="" class="code-copy"><svg data-v-49140617="" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover" style="bottom: 7.5px;"><path data-v-49140617="" fill="none" d="M0 0h24v24H0z"></path> <path data-v-49140617="" fill="#3eaf7c" d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"></path></svg> <span data-v-49140617="" class="" style="bottom: 7.5px;">
        @pdai: 代码已经复制到剪贴板
    </span></div></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>ThreadLocal 从理论上讲并不是用来解决多线程并发问题的，因为根本不存在多线程竞争。</p> <p>在一些场景 (尤其是使用线程池) 下，由于 ThreadLocal.ThreadLocalMap 的底层数据结构导致 ThreadLocal 有内存泄漏的情况，应该尽可能在每次使用 ThreadLocal 后手动调用 remove()，以避免出现 ThreadLocal 经典的内存泄漏甚至是造成自身业务混乱的风险。</p> <p>更详细的分析看：<a href="https://www.pdai.tech/md/java/thread/java-thread-x-threadlocal.html" class="">Java 并发 - ThreadLocal详解</a></p> <p><strong>(三)可重入代码(Reentrant Code)</strong></p> <p>这种代码也叫做纯代码(Pure Code)，可以在代码执行的任何时刻中断它，转而去执行另外一段代码(包括递归调用它本身)，而在控制权返回后，原来的程序不会出现任何错误。</p> <p>可重入代码有一些共同的特征，例如不依赖存储在堆上的数据和公用的系统资源、用到的状态量都由参数中传入、不调用非可重入的方法等。</p></div> <div class="page-contract"><h2>联系我</h2> <div class="c-content"><span style="font-size: 1rem; font-weight: bold;">添加@pdai微信</span><br> <img src="./command_files/pdai.jpg" height="280px" class="medium-zoom-image" style="margin: 10px;"><br>
        PS：添加时请备注<b>Java全栈</b>，谢谢！
      </div></div> <footer class="page-edit"><div class="edit-link"><a href="https://github.com/realpdai/tech-arch-doc/edit/master/md/java/thread/java-thread-x-theorty.md" target="_blank" rel="noopener noreferrer" style="display: none;">在 GitHub 上编辑此页</a> <a href="https://www.pdai.tech/md/about/me/blog-question.html" class="prev">
          我要纠错
        </a> <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></div> <div class="last-updated"><span class="prefix">上次更新: </span> <span class="time">2022/3/21 下午9:46:50</span></div></footer> <div class="page-nav"><p class="inner"><span class="prev">
        ←
        <a href="https://www.pdai.tech/md/java/thread/java-thread-x-overview.html" class="prev">
          ♥Java并发知识体系详解♥
        </a></span> <span class="next"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-thread-basic.html" class="">
          Java 并发 - 线程基础
        </a>
        →
      </span></p></div> <div class="google_ad_bottom"><ins data-ad-client="ca-pub-5088193899865249" data-ad-slot="6822031208" data-ad-format="auto" data-full-width-responsive="true" class="adsbygoogle" style="display: block; height: 280px;" data-adsbygoogle-status="done" data-ad-status="filled"><ins id="aswift_2_expand" style="border: none; height: 280px; width: 1200px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: inline-table;" tabindex="0" title="Advertisement" aria-label="Advertisement"><ins id="aswift_2_anchor" style="border: none; height: 280px; width: 1200px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: block; overflow: visible;"><iframe id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;border:0;width:1200px;height:280px" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="1200" height="280" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" src="./command_files/ads.html" data-google-container-id="a!3" data-google-query-id="CNHo6NK7rPcCFUMmvQodw84EFw" data-load-complete="true"></iframe></ins></ins></ins> <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
    </script></div> </main></div> <aside class="page-sidebar"> <div class="page-side-toolbar"><div class="option-box-toc-fixed"><div class="toc-container-sidebar"><div class="pos-box"><div class="icon-arrow"></div> <div class="scroll-box" style="max-height: 650px;"><div style="font-weight: bold; text-align: center;">Java 并发 - 理论基础</div> <hr> <div class="toc-box"><ul class="toc-sidebar-links" style=""><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%B8%A6%E7%9D%80bat%E5%A4%A7%E5%8E%82%E7%9A%84%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E5%8E%BB%E7%90%86%E8%A7%A3" class="toc-sidebar-link">带着BAT大厂的面试问题去理解</a><ul class="toc-sidebar-sub-headers"></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%A4%9A%E7%BA%BF%E7%A8%8B" class="toc-sidebar-link">为什么需要多线程</a><ul class="toc-sidebar-sub-headers"></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8%E7%A4%BA%E4%BE%8B" class="toc-sidebar-link">线程不安全示例</a><ul class="toc-sidebar-sub-headers"></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%B9%B6%E5%8F%91%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E6%A0%B9%E6%BA%90-%E5%B9%B6%E5%8F%91%E4%B8%89%E8%A6%81%E7%B4%A0" class="toc-sidebar-link">并发出现问题的根源: 并发三要素</a><ul class="toc-sidebar-sub-headers"><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%8F%AF%E8%A7%81%E6%80%A7-cpu%E7%BC%93%E5%AD%98%E5%BC%95%E8%B5%B7" class="toc-sidebar-link">可见性: CPU缓存引起</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%8E%9F%E5%AD%90%E6%80%A7-%E5%88%86%E6%97%B6%E5%A4%8D%E7%94%A8%E5%BC%95%E8%B5%B7" class="toc-sidebar-link">原子性: 分时复用引起</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E6%9C%89%E5%BA%8F%E6%80%A7-%E9%87%8D%E6%8E%92%E5%BA%8F%E5%BC%95%E8%B5%B7" class="toc-sidebar-link">有序性: 重排序引起</a></li></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#java%E6%98%AF%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98%E7%9A%84-jmmjava%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B" class="toc-sidebar-link">JAVA是怎么解决并发问题的: JMM(Java内存模型)</a><ul class="toc-sidebar-sub-headers"><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%85%B3%E9%94%AE%E5%AD%97-volatile%E3%80%81synchronized-%E5%92%8C-final" class="toc-sidebar-link">关键字: volatile、synchronized 和 final</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#happens-before-%E8%A7%84%E5%88%99" class="toc-sidebar-link">Happens-Before 规则</a></li></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8-%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E9%9D%9E%E7%9C%9F%E5%8D%B3%E5%81%87%E7%9A%84%E5%91%BD%E9%A2%98" class="toc-sidebar-link">线程安全: 不是一个非真即假的命题</a><ul class="toc-sidebar-sub-headers"><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#1-%E4%B8%8D%E5%8F%AF%E5%8F%98" class="toc-sidebar-link">1. 不可变</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#2-%E7%BB%9D%E5%AF%B9%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8" class="toc-sidebar-link">2. 绝对线程安全</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#3-%E7%9B%B8%E5%AF%B9%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8" class="toc-sidebar-link">3. 相对线程安全</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#4-%E7%BA%BF%E7%A8%8B%E5%85%BC%E5%AE%B9" class="toc-sidebar-link">4. 线程兼容</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#5-%E7%BA%BF%E7%A8%8B%E5%AF%B9%E7%AB%8B" class="toc-sidebar-link">5. 线程对立</a></li></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95" class="toc-sidebar-link">线程安全的实现方法</a><ul class="toc-sidebar-sub-headers"><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#1-%E4%BA%92%E6%96%A5%E5%90%8C%E6%AD%A5" class="toc-sidebar-link">1. 互斥同步</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#2-%E9%9D%9E%E9%98%BB%E5%A1%9E%E5%90%8C%E6%AD%A5" class="toc-sidebar-link">2. 非阻塞同步</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#3-%E6%97%A0%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88" class="toc-sidebar-link">3. 无同步方案</a></li></ul></li></ul></div></div></div> <hr style="margin-top: -8px; display: none;"> <div style="padding-left: 0.5em; display: none;"><span style="font-size: 12px; font-weight: 400;">【限时】腾讯云服务器Java全栈读者专享</span><br> <ul style="line-height: 1rem; font-size: 0.9em; color: rgb(44, 62, 80); font-weight: 300; margin-left: 10px; margin-top: 5px;"><li>[秒杀]2核2G,5M,50GB, 210元/3年 <a href="https://curl.qcloud.com/H8ttyNX3" target="_blank">查看</a></li> <li>[秒杀]2核4G,6M,80GB, 360元/3年 <a href="https://curl.qcloud.com/H8ttyNX3" target="_blank">查看</a></li> <li>[秒杀]4核8G,10M,100GB, 1100元/3年 <a href="https://curl.qcloud.com/H8ttyNX3" target="_blank">查看</a></li></ul></div> <hr style="margin-top: 5px;"> <div class="scroll-box" style="width: 250px; margin-top: 0px; margin-bottom: 0px;"><ins data-ad-format="fluid" data-ad-layout-key="-i3+1+1u-1z-35" data-ad-client="ca-pub-5088193899865249" data-ad-slot="4889276701" class="adsbygoogle" style="display: block;" data-adsbygoogle-status="done"></ins> <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
            </script></div></div></div> <div class="option-box-toc-over"><img src="./command_files/toc.png" class="nozoom"> <span class="show-txt">目录</span> <div class="toc-container"><div class="pos-box"><div class="icon-arrow"></div> <div class="scroll-box" style="max-height: 550px;"><div style="font-weight: bold; text-align: center;">Java 并发 - 理论基础</div> <hr> <div class="toc-box"><ul class="toc-sidebar-links" style=""><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%B8%A6%E7%9D%80bat%E5%A4%A7%E5%8E%82%E7%9A%84%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E5%8E%BB%E7%90%86%E8%A7%A3" class="toc-sidebar-link">带着BAT大厂的面试问题去理解</a><ul class="toc-sidebar-sub-headers"></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%A4%9A%E7%BA%BF%E7%A8%8B" class="toc-sidebar-link">为什么需要多线程</a><ul class="toc-sidebar-sub-headers"></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8%E7%A4%BA%E4%BE%8B" class="toc-sidebar-link">线程不安全示例</a><ul class="toc-sidebar-sub-headers"></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%B9%B6%E5%8F%91%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E6%A0%B9%E6%BA%90-%E5%B9%B6%E5%8F%91%E4%B8%89%E8%A6%81%E7%B4%A0" class="toc-sidebar-link">并发出现问题的根源: 并发三要素</a><ul class="toc-sidebar-sub-headers"><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%8F%AF%E8%A7%81%E6%80%A7-cpu%E7%BC%93%E5%AD%98%E5%BC%95%E8%B5%B7" class="toc-sidebar-link">可见性: CPU缓存引起</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%8E%9F%E5%AD%90%E6%80%A7-%E5%88%86%E6%97%B6%E5%A4%8D%E7%94%A8%E5%BC%95%E8%B5%B7" class="toc-sidebar-link">原子性: 分时复用引起</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E6%9C%89%E5%BA%8F%E6%80%A7-%E9%87%8D%E6%8E%92%E5%BA%8F%E5%BC%95%E8%B5%B7" class="toc-sidebar-link">有序性: 重排序引起</a></li></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#java%E6%98%AF%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98%E7%9A%84-jmmjava%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B" class="toc-sidebar-link">JAVA是怎么解决并发问题的: JMM(Java内存模型)</a><ul class="toc-sidebar-sub-headers"><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E5%85%B3%E9%94%AE%E5%AD%97-volatile%E3%80%81synchronized-%E5%92%8C-final" class="toc-sidebar-link">关键字: volatile、synchronized 和 final</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#happens-before-%E8%A7%84%E5%88%99" class="toc-sidebar-link">Happens-Before 规则</a></li></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8-%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E9%9D%9E%E7%9C%9F%E5%8D%B3%E5%81%87%E7%9A%84%E5%91%BD%E9%A2%98" class="toc-sidebar-link">线程安全: 不是一个非真即假的命题</a><ul class="toc-sidebar-sub-headers"><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#1-%E4%B8%8D%E5%8F%AF%E5%8F%98" class="toc-sidebar-link">1. 不可变</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#2-%E7%BB%9D%E5%AF%B9%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8" class="toc-sidebar-link">2. 绝对线程安全</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#3-%E7%9B%B8%E5%AF%B9%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8" class="toc-sidebar-link">3. 相对线程安全</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#4-%E7%BA%BF%E7%A8%8B%E5%85%BC%E5%AE%B9" class="toc-sidebar-link">4. 线程兼容</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#5-%E7%BA%BF%E7%A8%8B%E5%AF%B9%E7%AB%8B" class="toc-sidebar-link">5. 线程对立</a></li></ul></li><li><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95" class="toc-sidebar-link">线程安全的实现方法</a><ul class="toc-sidebar-sub-headers"><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#1-%E4%BA%92%E6%96%A5%E5%90%8C%E6%AD%A5" class="toc-sidebar-link">1. 互斥同步</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#2-%E9%9D%9E%E9%98%BB%E5%A1%9E%E5%90%8C%E6%AD%A5" class="toc-sidebar-link">2. 非阻塞同步</a></li><li class="toc-sidebar-sub-header"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-theorty.html#3-%E6%97%A0%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88" class="toc-sidebar-link">3. 无同步方案</a></li></ul></li></ul></div></div></div></div></div> <div class="option-box"><div class="mobile-solid icon"></div> <span class="show-txt">手机看</span> <div class="toc-container"><div class="pos-box"><div class="icon-arrow"></div> <div class="scroll-box" style="text-align: center;"><span style="font-size: 0.9rem;">微信扫一扫</span> <img height="180px" src="./command_files/saved_resource" class="medium-zoom-image" style="margin: 10px;">
              可以<b>手机看</b>或分享至<b>朋友圈</b></div></div></div></div> <div class="option-box"><a title="点击切换全屏" style="text-align: center; padding-left: 2px;"><img src="./command_files/full.png" width="30px" class="nozoom"> <span style="color: gray; font-size: 11px; font-weight: 400;">全屏看</span></a></div> <div class="option-box"><img src="./command_files/toggle.png" width="30px" class="nozoom"> <span class="show-txt" style="">左栏</span></div> <div class="option-box"><img src="./command_files/wexin2.png" width="25px" class="nozoom"> <span class="show-txt" style="color: red; font-weight: bold; background-color: yellow;">交流圈</span> <div class="toc-container"><div class="pos-box"><div class="icon-arrow"></div> <div class="scroll-box" style="text-align: center;"><span style="font-size: 0.8rem; font-weight: bold;">添加pdai微信进《Java全栈知识体系》学习交流圈「无任何套路」</span> <img src="./command_files/pdai.jpg" height="180px" class="medium-zoom-image" style="margin: 10px;">
              PS：添加时请备注<b>Java全栈</b>，谢谢！
            </div></div></div></div> <div class="option-box"><img src="./command_files/download.jpg" width="25px" class="nozoom"> <span class="show-txt" style="color: red; font-weight: bold; background-color: rgb(166, 247, 146);">下资料</span> <div class="toc-container"><div class="pos-box"><div class="icon-arrow"></div> <div class="scroll-box" style="text-align: center;"><span style="font-size: 0.8rem; font-weight: bold;">扫描公众号，回复“<font style="color: red;">资料</font>”下载10GB+书籍资料「无任何套路」</span> <img src="./command_files/pdai_gzh.jpg" height="180px" class="medium-zoom-image" style="margin: 10px;"> <b>公众号:</b> Java全栈知识体系
            </div></div></div></div> <div class="option-box" style=""><a href="https://www.pdai.tech/md/about/me/about-donate.html"><div class="heart-solid icon"></div></a> <span class="show-txt">支持我</span> <div class="toc-container"><div class="pos-box"><div class="icon-arrow"></div> <div class="scroll-box" style="text-align: center;"><span style="font-size: 0.8rem; font-weight: bold;">鼓励/支持/赞赏我</span> <img src="./command_files/pdai-guli.png" height="180px" width="200px" class="medium-zoom-image" style="margin: 5px;">
              1. 不靠它生存但仍希望得到你的鼓励；<br> 
              2. 时刻警醒自己保持技术人的初心，恒心，简单，利他；<br> <font color="gray">（点击右侧❤️可以查看赞赏榜单和用途)</font></div></div></div></div> <div class="option-box" style="padding-left: 2px; text-align: center;"><a href="https://www.pdai.tech/md/interview/x-interview.html" class=""><div class="pin-solid icon"></div> <span class="show-txt">面试</span></a></div> <div title="♥Java并发知识体系详解♥" class="option-box" style="padding-left: 2px; text-align: center;"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-overview.html" class=""><img src="./command_files/pre2.png" width="30px" class="nozoom"> <span class="show-txt">上一篇</span></a></div> <div title="Java 并发 - 线程基础" class="option-box" style="padding-left: 2px; text-align: center;"><a href="https://www.pdai.tech/md/java/thread/java-thread-x-thread-basic.html" class=""><img src="./command_files/next2.png" width="30px" class="nozoom"> <span class="show-txt">下一篇</span></a></div></div>  <div class="page-side-sitemap"><div class="option-box"><img src="./command_files/sitemap.png" class="nozoom img"> <span class="show-txt">站点图</span> <div class="sitemap-container"><h4>站点导航图
            <a href="https://www.pdai.tech/md/about/me/about-me.html" class="sitemap-top-link"> 关于我</a> <a href="https://www.pdai.tech/md/about/blog/blog-build-vuepress.html" class="sitemap-top-link"> 关于站点</a> <a href="https://www.pdai.tech/md/about/me/blog-changelist.html" class="sitemap-top-link"> 最近更新记录</a> <a href="https://www.pdai.tech/md/about/me/blog-question.html" class="sitemap-top-link"><font style="color: red; background-color: yellow;">问题反馈</font></a></h4> <table class="sitemap-table"><tr><td nowrap="nowrap"><div class="sitemap-col-group">常用搜索</div></td> <td><div class="sitemap-col-item"><a href="http://www.baidu.com/" target="_blank" title="百度">  
          百度
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="http://www.google.com/" target="_blank" title="Google">  
          Google
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="http://www.bing.com/" target="_blank" title="Bing">  
          Bing
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="https://github.com/" target="_blank" title="Github">  
          Github
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="https://www.programcreek.com/java-api-examples/index.php" target="_blank" title="搜代码">  
          搜代码
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div></td> <!----></tr><tr><td nowrap="nowrap"><div class="sitemap-col-group">技术社区</div></td> <td><div class="sitemap-col-item"><a href="http://www.csdn.net/" target="_blank" title="CSDN">  
          CSDN
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="http://www.cnblogs.com/" target="_blank" title="博客园">  
          博客园
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="https://www.oschina.net/" target="_blank" title="OSChina">  
          OSChina
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="https://segmentfault.com/" target="_blank" title="知否">  
          知否
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="https://juejin.im/" target="_blank" title="掘金">  
          掘金
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="https://www.linuxidc.com/" target="_blank" title="Linux公社">  
          Linux公社
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="https://www.ibm.com/developerworks/cn/" target="_blank" title="IBM 开发者">  
          IBM 开发者
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="sitemap-col-item"><a href="https://stackoverflow.com/" target="_blank" title="StackOverflow">  
          StackOverflow
          <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div></td> <!----></tr><tr><td nowrap="nowrap"><div class="sitemap-col-group">Java相关</div></td> <!----> <td><a href="https://www.pdai.tech/md/java/basic/java-basic-oop.html" class="sitemap-col-item">
          面向对象基础
        </a><a href="https://www.pdai.tech/md/java/basic/java-basic-lan-basic.html" class="sitemap-col-item">
          语法基础
        </a><a href="https://www.pdai.tech/md/java/collection/java-collection-all.html" class="sitemap-col-item">
          集合框架
        </a><a href="https://www.pdai.tech/md/java/thread/java-thread-x-overview.html" class="sitemap-col-item">
          并发基础
        </a><a href="https://www.pdai.tech/md/java/thread/java-thread-x-key-synchronized.html" class="sitemap-col-item">
          并发关键字
        </a><a href="https://www.pdai.tech/md/java/thread/java-thread-x-juc-overview.html" class="sitemap-col-item">
          JUC并发框架
        </a><a href="https://www.pdai.tech/md/java/io/java-io-overview.html" class="sitemap-col-item">
          IO框架
        </a><a href="https://www.pdai.tech/md/java/java8/java8.html" class="sitemap-col-item">
          Java8 特性
        </a><a href="https://www.pdai.tech/md/java/jvm/java-jvm-x-overview.html" class="sitemap-col-item">
          JVM基础
        </a><a href="https://www.pdai.tech/md/java/jvm/java-jvm-param.html" class="sitemap-col-item">
          调试排错
        </a><a href="https://www.pdai.tech/md/java/others/java-others-awesome-java.html" class="sitemap-col-item">
          更多资源
        </a></td></tr><tr><td nowrap="nowrap"><div class="sitemap-col-group">算法相关</div></td> <!----> <td><a href="https://www.pdai.tech/md/algorithm/alg-basic-array.html" class="sitemap-col-item">
          数组与线性表
        </a><a href="https://www.pdai.tech/md/algorithm/alg-basic-tree.html" class="sitemap-col-item">
          树详解
        </a><a href="https://www.pdai.tech/md/algorithm/alg-basic-graph.html" class="sitemap-col-item">
          图详解
        </a><a href="https://www.pdai.tech/md/algorithm/alg-sort-overview.html" class="sitemap-col-item">
          内部排序
        </a><a href="https://www.pdai.tech/md/algorithm/alg-core-divide-and-conquer.html" class="sitemap-col-item">
          算法思想
        </a><a href="https://www.pdai.tech/md/algorithm/alg-domain-security-degist.html" class="sitemap-col-item">
          安全算法
        </a><a href="https://www.pdai.tech/md/algorithm/alg-domain-bigdata-overview.html" class="sitemap-col-item">
          大数据处理
        </a><a href="https://www.pdai.tech/md/algorithm/alg-domain-distribute-overview.html" class="sitemap-col-item">
          分布式算法
        </a><a href="https://www.pdai.tech/md/algorithm/alg-domain-load-balance.html" class="sitemap-col-item">
          负载均衡算法
        </a><a href="https://www.pdai.tech/md/algorithm/alg-domain-suggest.html" class="sitemap-col-item">
          推荐算法
        </a><a href="https://www.pdai.tech/md/algorithm/alg-other-mind.html" class="sitemap-col-item">
          头脑风暴
        </a></td></tr><tr><td nowrap="nowrap"><div class="sitemap-col-group">数据库相关</div></td> <!----> <td><a href="https://www.pdai.tech/md/db/sql/sql-db-howitworks.html" class="sitemap-col-item">
          数据库原理
        </a><a href="https://www.pdai.tech/md/db/sql-lan/sql-lan.html" class="sitemap-col-item">
          SQL语言
        </a><a href="https://www.pdai.tech/md/db/sql-mysql/sql-mysql-theory.html" class="sitemap-col-item">
          MySQL相关
        </a><a href="https://www.pdai.tech/md/db/nosql-mongo/mongo-performance-improve.html" class="sitemap-col-item">
          MongoDB
        </a><a href="https://www.pdai.tech/md/db/nosql-es/elasticsearch.html" class="sitemap-col-item">
          ElasticSearch
        </a></td></tr><tr><td nowrap="nowrap"><div class="sitemap-col-group">开发基础相关</div></td> <!----> <td><a href="https://www.pdai.tech/md/develop/package/dev-package-x-apache-common.html" class="sitemap-col-item">
          常用类库
        </a><a href="https://www.pdai.tech/md/develop/ut/dev-ut-x-junit.html" class="sitemap-col-item">
          单元测试
        </a><a href="https://www.pdai.tech/md/develop/regex/dev-regex-all.html" class="sitemap-col-item">
          正则表达式
        </a><a href="https://www.pdai.tech/md/develop/protocol/dev-protocol-overview.html" class="sitemap-col-item">
          网络协议
        </a><a href="https://www.pdai.tech/md/develop/security/dev-security-overview.html" class="sitemap-col-item">
          安全相关
        </a><a href="https://www.pdai.tech/md/develop/refactor/dev-refactor-if-else.html" class="sitemap-col-item">
          常见重构技巧
        </a></td></tr><tr><td nowrap="nowrap"><div class="sitemap-col-group">架构相关</div></td> <!----> <td><a href="https://www.pdai.tech/md/arch/arch-x-basic.html" class="sitemap-col-item">
          架构基础
        </a><a href="https://www.pdai.tech/md/arch/arch-x-view.html" class="sitemap-col-item">
          架构视角
        </a><a href="https://www.pdai.tech/md/arch/arch-x-evolution.html" class="sitemap-col-item">
          架构演进
        </a><a href="https://www.pdai.tech/md/arch/arch-x-pattern.html" class="sitemap-col-item">
          架构模式和要素
        </a><a href="https://www.pdai.tech/md/arch/arch-y-cache.html" class="sitemap-col-item">
          高并发之缓存
        </a><a href="https://www.pdai.tech/md/arch/arch-y-ratelimit.html" class="sitemap-col-item">
          高并发之限流
        </a><a href="https://www.pdai.tech/md/arch/arch-y-reduce.html" class="sitemap-col-item">
          高并发之降级
        </a><a href="https://www.pdai.tech/md/arch/arch-y-loadbalance.html" class="sitemap-col-item">
          负载均衡
        </a><a href="https://www.pdai.tech/md/arch/arch-y-backup.html" class="sitemap-col-item">
          容灾备份
        </a><a href="https://www.pdai.tech/md/arch/arch-x-security.html" class="sitemap-col-item">
          架构安全
        </a><a href="https://www.pdai.tech/md/arch/arch-example-seckill.html" class="sitemap-col-item">
          秒杀系统设计
        </a><a href="https://www.pdai.tech/md/arch/arch-example-goods-detail.html" class="sitemap-col-item">
          架构案例
        </a></td></tr><tr><td nowrap="nowrap"><div class="sitemap-col-group">工具和部署</div></td> <!----> <td><a href="https://www.pdai.tech/md/devops/tool/tool-list-overview.html" class="sitemap-col-item">
          工具集合
        </a><a href="https://www.pdai.tech/md/devops/tool/tool-ide.html" class="sitemap-col-item">
          IDE相关
        </a><a href="https://www.pdai.tech/md/devops/tool/tool-git.html" class="sitemap-col-item">
          Git
        </a><a href="https://www.pdai.tech/md/devops/tool/tool-maven.html" class="sitemap-col-item">
          Maven
        </a><a href="https://www.pdai.tech/md/devops/linux/linux.html" class="sitemap-col-item">
          Linux
        </a><a href="https://www.pdai.tech/md/devops/docker/docker-00-overview.html" class="sitemap-col-item">
          Docker
        </a></td></tr><tr><td nowrap="nowrap"><div class="sitemap-col-group">方法论</div></td> <!----> <td><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-solid.html" class="sitemap-col-item">
          SOLID
        </a><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-cap.html" class="sitemap-col-item">
          CAP
        </a><a href="https://www.pdai.tech/md/dev-spec/spec/dev-th-base.html" class="sitemap-col-item">
          BASE
        </a><a href="https://www.pdai.tech/md/dev-spec/spec/dev-opensource.html" class="sitemap-col-item">
          开源协议
        </a><a href="https://www.pdai.tech/md/dev-spec/code-style/code-style-alibaba.html" class="sitemap-col-item">
          代码规范
        </a><a href="https://www.pdai.tech/md/dev-spec/pattern/1_overview.html" class="sitemap-col-item">
          设计模式
        </a></td></tr><tr><td nowrap="nowrap"><div class="sitemap-col-group">产品和团队</div></td> <!----> <td><a href="https://www.pdai.tech/md/team/team-z-wechat.html" class="sitemap-col-item">
          产品相关
        </a><a href="https://www.pdai.tech/md/team/team-z-task-emergency.html" class="sitemap-col-item">
          团队相关
        </a><a href="https://www.pdai.tech/md/team/team-z-arch-future.html" class="sitemap-col-item">
          其它分享
        </a></td></tr></table></div></div></div> <svg data-v-70ed829b="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 49.484 28.284" class="go-to-top"><g data-v-70ed829b="" transform="translate(-229 -126.358)"><rect data-v-70ed829b="" fill="currentColor" width="35" height="5" rx="2" transform="translate(229 151.107) rotate(-45)"></rect> <rect data-v-70ed829b="" fill="currentColor" width="35" height="5" rx="2" transform="translate(274.949 154.642) rotate(-135)"></rect></g></svg> </aside></div><div class="global-ui"></div></div>
    <script src="./command_files/app.34da985c.js.下载" defer=""></script><script src="./command_files/4.64411e13.js.下载" defer=""></script><script src="./command_files/3.3821c1cf.js.下载" defer=""></script><script src="./command_files/26.38a40133.js.下载" defer=""></script>
  

<ins class="adsbygoogle adsbygoogle-noablate" data-adsbygoogle-status="done" style="display: none !important;" data-ad-status="unfilled"><ins id="aswift_1_expand" style="border: none; height: 0px; width: 0px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: inline-table;" tabindex="0" title="Advertisement" aria-label="Advertisement"><ins id="aswift_1_anchor" style="border: none; height: 0px; width: 0px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: block;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:undefinedpx;height:undefinedpx" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" src="./command_files/ads(1).html" data-google-container-id="a!2" data-load-complete="true"></iframe></ins></ins></ins><iframe src="./command_files/aframe.html" width="0" height="0" style="display: none;"></iframe></body><iframe id="google_esf" name="google_esf" src="./command_files/zrt_lookup.html" style="display: none;"></iframe></html>