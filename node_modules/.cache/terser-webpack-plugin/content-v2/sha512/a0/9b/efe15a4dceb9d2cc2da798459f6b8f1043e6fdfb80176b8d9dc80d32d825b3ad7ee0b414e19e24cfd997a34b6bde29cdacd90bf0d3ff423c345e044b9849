{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{410:function(t,s,a){\"use strict\";a.r(s);var n=a(56),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"规范\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#规范\"}},[t._v(\"#\")]),t._v(\" 规范\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"编程规约\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编程规约\"}},[t._v(\"#\")]),t._v(\" 编程规约\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"命名\")])]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"方法名、参数名、成员变量、局部变量都统一使用lowerCamelCase风格。\\n正例：localValue / getHttpMessage() / inputUserId\")]),t._v(\" \"),a(\"li\",[a(\"ol\",{attrs:{start:\"6\"}},[a(\"li\")])])]),t._v(\" \"),a(\"p\",[t._v(\"【强制】\\n常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。\\n正例：MAX_STOCK_COUNT/ CACHE_EXPIRED_TIME\")]),t._v(\" \"),a(\"p\",[t._v(\"反例：MAX_COUNT/ EXPIRED_TIME\\n3. 【强制】抽象类命名使用Abstract或Base开头；异常类命名使用Exception结尾；测试类命名以它要测试的类的名称开始，以Test结尾。\\n4. 【强制】类型与中括号紧挨相连来表示数组。\\n正例：定义整形数组int[] arrayDemo。\")]),t._v(\" \"),a(\"p\",[t._v(\"反例：在main参数中，使用String args[]来定义。\")]),t._v(\" \"),a(\"ol\",{attrs:{start:\"14\"}},[a(\"li\")]),t._v(\" \"),a(\"p\",[t._v(\"【推荐】\\n在常量与变量的命名时，表示类型的名词放在词尾，以提升辨识度。\\n正例：\\nstartTime / workQueue / nameList / TERMINATED_THREAD_COUNT\\n反例：\\nstartedAt / QueueOfWork / listName / COUNT_TERMINATED_THREAD\")]),t._v(\" \"),a(\"p\",[t._v(\"1\\n5.\\n【推荐】\\n如果模块、\\n接口、\\n类、\\n方法使用了设计模式，在命名时需体现出具体模式。\\n说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计理念。\\n正例：\\npublic class OrderFactory;\\npublic class LoginProxy;\\npublic class ResourceObserver;\")]),t._v(\" \"),a(\"p\",[t._v(\"1\\n8.\\n【参考】\\n枚举类名带上\\nEnum\\n后缀，枚举成员名称需要全大写，单词间用下划线隔开。\\n说明：枚举其实就是特殊的常量类，且构造方法被默认强制是私有。\\n正例：枚举名字为\\nProcessStatusEnum\\n的成员名称：\\nSUCCESS / UNKNOWN_REASON\\n。\")]),t._v(\" \"),a(\"p\",[t._v(\"1\\n9.\\n【参考】\\n各层命名规约：\\nA) Service/DAO层方法命名规约1）\\n获取单个对象的方法用get做前缀。\\n2）\\n获取多个对象的方法用list\\n做前缀，复数结尾，如：listObjects。\\n3）\\n获取统计值的方法用count做前缀。\\n4）插入的方法用save/insert做前缀。\\n5）删除的方法用remove/delete做前缀。\\n6）\\n修改的方法用update做前缀。\\nB)\\n领域模型命名规约Java开发手册\\n1）\\n数据对象：xxxDO，xxx即为数据表名。\\n2）数据传输对象：xxxDTO，xxx为业务领域相关的名称。\\n3）展示对象：xxxVO，xxx一般为网页名称。\\n4）POJO是DO/DTO/BO/VO的统称，禁止命名成xxxPOJO。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"常量定义\")])]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"【强制】不允许任何魔法值（\"),a(\"strong\",[t._v(\"即未经预先定义的常量\")]),t._v('）直接出现在代码中。\\n反例：//本例中，开发者A定义了缓存的key，然后开发者B使用缓存时少了下划线，即key\"Id#taobao\"+tradeId，导致出现故障String key =\"Id#taobao_\"+tradeIdcacheput(key,value);')]),t._v(\" \"),a(\"li\",[t._v(\"【推荐】不要使用一个常量类维护所有常量，要按常量功能进行归类，分开维护。\")])]),t._v(\" \"),a(\"p\",[t._v(\"正例：缓存相关常量放在类CacheConsts下；系统配置相关常量放在SystemConfigConsts\\n下。\")]),t._v(\" \"),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[t._v(\"【推荐】常量的复用层次有五层：跨应用共享常量、应用内共享常量、子工程内共享常量、包内共享常量、类内共享常量。\")])]),t._v(\" \"),a(\"p\",[t._v(\"1）跨应用共享常量：放置在二方库中，通常是client.jar中的constant目录下。\")]),t._v(\" \"),a(\"p\",[t._v('2）应用内共享常量：放置在一方库中，通常是子模块中的constant目录下。\\n反例：易懂变量也要统一定义成应用内共享常量，两位工程师在两个类中分别定义了“YES”\\n的变量：类A中：public static final String YES = \"yes\";类B中：public static final String YES = \"y\";')]),t._v(\" \"),a(\"p\",[t._v(\"A.YES.equals(B.YES)，预期是true，但实际返回为false，导致线上问题。\")]),t._v(\" \"),a(\"p\",[t._v(\"3）子工程内部共享常量：即在当前子工程的constant目录下。\")]),t._v(\" \"),a(\"p\",[t._v(\"4）包内共享常量：即在当前包下单独的constant目录下。\")]),t._v(\" \"),a(\"p\",[t._v(\"5）类内共享常量：直接在类内部private static final定义。\")]),t._v(\" \"),a(\"ol\",{attrs:{start:\"4\"}},[a(\"li\",[t._v(\"【推荐】\\n如果变量值仅在一个固定范围内变化用enum类型来定义。\\n说明：如果存在名称之外的延伸属性应使用enum类型，下面正例中的数字就是延伸信息，表示一年中的第几个季节。\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"enum\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SeasonEnum\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"SPRING\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"SUMMER\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"AUTUMN\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"WINTER\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" seq\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SeasonEnum\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"intseq\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"seq\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"seq\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getSeq\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" seq\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"代码格式\")]),t._v(\" \"),a(\"li\",[t._v(\"OOP规约（面向对象程序设计）\")])]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"避免通过类对象引用来访问此类静态变量或静态方法。\")]),t._v(\" \"),a(\"li\",[t._v(\"【强制】外部正在调用或者二方库依赖的接口，不允许修改方法签名，避免对接口调用方产生影响。接口过时必须加@Deprecated注解，并清晰地说明采用的新接口或者新服务是什么。\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"mysql数据库\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mysql数据库\"}},[t._v(\"#\")]),t._v(\" MySQL数据库\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"建表规约\")])]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"【强制】表达是与否概念的字段，必须使用is_xxx的方式命名，数据类型是\\nunsigned tinyint（1表示是，0表示否）。\\n说明：任何字段如果为非负数，必须是unsigned。\")])]),t._v(\" \"),a(\"p\",[t._v(\"注意：POJO类中的任何布尔类型的变量，都不要加is前缀，所以，需要在\\nresultMap设置从is_xxx到Xxx的映射关系。数据库表示是与否的值，使用\\ntinyint类型，坚持is_xxx的命名方式是为了明确其取值含义与取值范围。\")]),t._v(\" \"),a(\"p\",[t._v(\"正例：表达逻辑删除的字段名is_deleted，1表示删除，0表示未删除。（订单状态可以使用多个数字代替，可以不用is_xxx，里面有订单多种状态，这里is_xxx指的是业务系统中用boolean修饰的字段）\")]),t._v(\" \"),a(\"ol\",{attrs:{start:\"2\"}},[a(\"li\",[t._v(\"【强制】表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。\")])]),t._v(\" \"),a(\"p\",[t._v(\"说明：MySQL在Windows下不区分大小写，但在Linux下默认是区分大小写。因此，数据库名、表名、字段名，都不允许出现任何大写字母，避免节外生枝。\")]),t._v(\" \"),a(\"p\",[t._v(\"正例：aliyun_admin，rdc_config，level3_name\")]),t._v(\" \"),a(\"p\",[t._v(\"反例：AliyunAdmin，rdcConfig，level_3_name\")]),t._v(\" \"),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[a(\"p\",[t._v(\"表名不能使用复数名词。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"禁用保留字，如desc,range,match,delayed等。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"【强制】主键索引名为pk_字段名；唯一索引名为uk_字段名；普通索引名则为idx_字段名。\")])])]),t._v(\" \"),a(\"p\",[t._v(\"说明：pk_即primary key；uk_即unique key；idx_即index的简称。\\n6. 【强制】小数类型为decimal，禁止使用float和double。(精度损失问题，若存储的数据范围超过decimal的范围，建议将数据拆成整数和小数并分开存储。)\\n7. 【强制】如果存储的字符串长度几乎相等，使用char定长字符串类型。\\n8. 【强制】varchar是可变长字符串，不预先分配存储空间，长度不要超过5000，如果存储长度大于此值，定义字段类型为text，独立出来一张表，用主键来对应，避免影响其它字段索引效率。\\n9. 【强制】\"),a(\"strong\",[t._v(\"表必备三字段：id, create_time, update_time\")])]),t._v(\" \"),a(\"p\",[t._v(\"说明：其中id必为主键，类型为bigint unsigned、单表时自增、步长为1。\\ncreate_time, update_time的类型均为datetime类型，前者现在时表示主动式创建，后者过去分词表示被动式更新。\\n10. 表命名：遵循“业务名称_表的作用”，如\\nalipay_task / force_project / trade_config\\n11. 库名尽量与应用名称相同。\\n12. 如果修改字段含义或对字段表示的状态追加时，需要及时更新字段注释。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"索引规约\")])]),t._v(\" \"),a(\"ol\",[a(\"li\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"SQL语句\")])]),t._v(\" \"),a(\"ol\",[a(\"li\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"ORM映射（对象关系映射）\\nmybatisx代码生成器自动生成POJO,service,mapper\")])]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"【强制】在表查询中，一律不要使用*作为查询的字段列表，需要哪些字段必须明确写明。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"【强制】POJO类的布尔属性不能加is，而数据库字段必须加is_，要求在resultMap中进行字段与属性之间的映射。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"【强制】不要用resultClass当返回参数，即使所有类属性名与数据库字段一一对应，也需要定义resultMap；反过来，每一个表也必然有一个resultMap/resultMap元素与之对应。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"【强制】sql.xml配置参数使用：#{}，#param#不要使用${}此种方式容易出现\\nSQL注入。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"【强制】iBATIS自带的queryForList(StringstatementName,intstart,intsize)不推荐使用。\")])])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"PageUtils\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"queryPage\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Map\")]),a(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" params\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"IPage\")]),a(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"OrderEntity\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" page \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"page\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"\\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Query\")]),a(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"OrderEntity\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getPage\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"params\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"QueryWrapper\")]),a(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"OrderEntity\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"PageUtils\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"page\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//正例：\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Map\")]),a(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"map \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"HashMap\")]),a(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"16\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nmap\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"put\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"start\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"start\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nmap\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"put\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"size\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"size\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),a(\"ol\",{attrs:{start:\"6\"}},[a(\"li\",[t._v(\"【强制】不允许直接拿HashMap与Hashtable作为查询结果集的输出。\")])]),t._v(\" \"),a(\"p\",[t._v(\"反例：某同学为避免写一个\"),a(\"resultMap\",[t._v(\"xxx\")]),t._v(\"，直接使用HashTable来接收数据库返回结果，结果出现日常是把bigint转成Long值，而线上由于数据库版本不一样，解析成BigInteger，导致线上问题。\")],1),t._v(\" \"),a(\"ol\",{attrs:{start:\"7\"}},[a(\"li\",[t._v(\"【强制】更新数据表记录时，必须同时更新记录对应的update_time字段值为当前时间。\")]),t._v(\" \"),a(\"li\",[t._v(\"【参考】@Transactional事务不要滥用。事务会影响数据库的QPS，另外使用事务的地方需要考虑各方面的回滚方案，包括缓存回滚、搜索引擎回滚、消息补偿、统计修正等。\")]),t._v(\" \"),a(\"li\",[a(\"isEqual\",[t._v(\"中的compareValue是与属性值对比的常量，一般是数字，表示相等时带上此条件；\"),a(\"isNotEmpty\",[t._v(\"表示不为空且不为null时执行；\"),a(\"isNotNull\",[t._v(\"表示不为null值时执行。\")])],1)],1)],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}