{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{409:function(v,_,t){\"use strict\";t.r(_);var a=t(56),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"mysql\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mysql\"}},[v._v(\"#\")]),v._v(\" Mysql\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"定义\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义\"}},[v._v(\"#\")]),v._v(\" 定义\")]),v._v(\" \"),t(\"p\",[v._v(\"开放源代码的关系型数据库管理系统\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"mysql存储引擎区别\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mysql存储引擎区别\"}},[v._v(\"#\")]),v._v(\" MySQL存储引擎区别\")]),v._v(\" \"),t(\"table\",[t(\"thead\",[t(\"tr\",[t(\"th\",[v._v(\"表头\")]),v._v(\" \"),t(\"th\",[v._v(\"InnoDB\")]),v._v(\" \"),t(\"th\",[v._v(\"MYISAM\")])])]),v._v(\" \"),t(\"tbody\",[t(\"tr\",[t(\"td\",[v._v(\"外键\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")]),v._v(\" \"),t(\"td\")]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"锁\")]),v._v(\" \"),t(\"td\",[v._v(\"表锁和行锁\")]),v._v(\" \"),t(\"td\",[v._v(\"表锁\")])]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"可恢复性\")]),v._v(\" \"),t(\"td\",[v._v(\"由事务日志恢复\")]),v._v(\" \"),t(\"td\",[v._v(\"无日志\")])]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"索引与表结构\")]),v._v(\" \"),t(\"td\",[v._v(\"聚簇，数据与索引集中存储，.ibd和.frm\")]),v._v(\" \"),t(\"td\",[v._v(\"数据.MYD，索引.MYI\")])]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"查询性能\")]),v._v(\" \"),t(\"td\"),v._v(\" \"),t(\"td\",[v._v(\"一般快\")])])])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"三大范式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三大范式\"}},[v._v(\"#\")]),v._v(\" 三大范式：\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"第一：每列保持原子性，字段不可分解\")]),v._v(\" \"),t(\"li\",[v._v(\"第二：表中每列都和主键相关\")]),v._v(\" \"),t(\"li\",[v._v(\"第三：表中每列都和主键列直接相关\")])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"数据类型\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据类型\"}},[v._v(\"#\")]),v._v(\" 数据类型\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"整数\")]),v._v(\" \"),t(\"li\",[v._v(\"浮点数\")])]),v._v(\" \"),t(\"p\",[v._v(\"DECIMAL为浮点数，使用字符串存储，能精确到小数\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"日期\")])]),v._v(\" \"),t(\"p\",[v._v(\"常用的有year、time、date、datatime(1000年-9999年，秒，8位，时区无关)、timestamp（1970-2038年，秒，4位，时区相关）\\n应用场景：尽量使用timestamp,更高的空间效率\")]),v._v(\" \"),t(\"h2\",{attrs:{id:\"索引\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引\"}},[v._v(\"#\")]),v._v(\" 索引\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"定义-2\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义-2\"}},[v._v(\"#\")]),v._v(\" 定义：\")]),v._v(\" \"),t(\"p\",[v._v(\"对数据库表的一列或多列的值进行排序的一种结构\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"索引优缺点\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引优缺点\"}},[v._v(\"#\")]),v._v(\" 索引优缺点\")]),v._v(\" \"),t(\"p\",[v._v(\"优点：\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"加快数据的检索速度\")]),v._v(\" \"),t(\"li\",[v._v(\"将随机I/O变成顺序I/O（B+树的叶子节点连接在一起）\")]),v._v(\" \"),t(\"li\",[v._v(\"加速表与表之间的连接\")])]),v._v(\" \"),t(\"p\",[v._v(\"缺点：\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"索引占用物理空间(空间)\")]),v._v(\" \"),t(\"li\",[v._v(\"创建和维护索引都需要时间(时间)\")])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"索引的数据结构\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引的数据结构\"}},[v._v(\"#\")]),v._v(\" 索引的数据结构\")]),v._v(\" \"),t(\"p\",[v._v(\"索引的数据结构主要是B+树和哈希表，对应的索引分别为B+树索引(InnoDB引擎的默认索引类型)和哈希索引（InnoDB）\\nB+树：所有的记录节点都是按照键值的大小顺序放在叶子节点上（有序性，效率高，支持排序和范围查询）.\")]),v._v(\" \"),t(\"p\",[v._v(\"哈希：对每行数据的索引列哈希计算，哈希值为key，指向数据行的指针作为哈希表value,适合精确查找O(1)\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"b-hash索引区别\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#b-hash索引区别\"}},[v._v(\"#\")]),v._v(\" B+,hash索引区别\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"哈希一般用精确的等值查找，B+树除了精确的等值查找外还有其他查找（大多数情况选用）\")]),v._v(\" \"),t(\"li\",[v._v(\"哈希不支持排序，哈希表无序\")]),v._v(\" \"),t(\"li\",[v._v(\"哈希不支持范围查找\")]),v._v(\" \"),t(\"li\",[v._v(\"哈希不支持模糊查询及多列索引的最左前缀匹配\")]),v._v(\" \"),t(\"li\",[v._v(\"哈希有冲突不稳定，B+树稳定（每次都从根节点到叶子节点）\")])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"索引种类-一个索引可有多个种类\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引种类-一个索引可有多个种类\"}},[v._v(\"#\")]),v._v(\" 索引种类（一个索引可有多个种类）\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"主键索引：数据列不能重复和NULL，一个表只能有一个主键索引\")]),v._v(\" \"),t(\"li\",[v._v(\"组合索引：多个列值组成的索引\")]),v._v(\" \"),t(\"li\",[v._v(\"唯一索引：数据列不能重复，可以NULL，索引值唯一\")]),v._v(\" \"),t(\"li\",[v._v(\"全文索引：对文本内容搜索\")]),v._v(\" \"),t(\"li\",[v._v(\"普通索引：基本的索引类型，可为NULL\")])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"b树和b-树区别\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#b树和b-树区别\"}},[v._v(\"#\")]),v._v(\" B树和B+树区别\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"B+树叶子节点相连，方便顺序检索\")]),v._v(\" \"),t(\"li\",[v._v(\"B树内部节点和叶子节点都放键值，B+树内部节点只有键没值，叶子节点放键和值\")])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"不选b树的原因\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#不选b树的原因\"}},[v._v(\"#\")]),v._v(\" 不选B树的原因\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"B+树空间利用率更高，B+树内部节点只存储键，树高度变低，减少I/O次数，检索更快\")]),v._v(\" \"),t(\"li\",[v._v(\"B+叶子节点连接在一起，范围查找，顺序查找方便\")]),v._v(\" \"),t(\"li\",[v._v(\"B+树更稳定，查询从根节点到叶子节点，B树适合随机检索，B+树适合随机检索和顺序检索\")])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"聚簇索引-非聚簇索引\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#聚簇索引-非聚簇索引\"}},[v._v(\"#\")]),v._v(\" 聚簇索引，非聚簇索引\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"聚簇索引：数据和结构一起存储，索引结构的叶子节点保留数据行\")]),v._v(\" \"),t(\"li\",[v._v(\"非聚簇索引：数据和索引分开存储，索引叶子检点存储的是指向数据行的地址\")])]),v._v(\" \"),t(\"p\",[v._v(\"InnoDB：主聚辅非聚\\nMyISAM：主非聚辅非聚\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"非聚簇索引不一定回表-涉及索引覆盖\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#非聚簇索引不一定回表-涉及索引覆盖\"}},[v._v(\"#\")]),v._v(\" 非聚簇索引不一定回表，涉及索引覆盖\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"当select 主键,xx where xx=,走辅助索引能查数据，这就是索引覆盖\")]),v._v(\" \"),t(\"li\",[v._v(\"select 主键，xx,xx1 where xx=，需要建立xx和xx1的联合索引\")])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"索引设计原则\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引设计原则\"}},[v._v(\"#\")]),v._v(\" 索引设计原则\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"适合索引列在where后出行的列或连接句子中指定的列，而不是select后的列\")]),v._v(\" \"),t(\"li\",[v._v(\"索引列基数大效果好，即区分度高的列\")]),v._v(\" \"),t(\"li\",[v._v(\"尽量用短索引(磁盘I/O少，缓存能存更多键值)\")]),v._v(\" \"),t(\"li\",[v._v(\"尽量使用最左前缀\")]),v._v(\" \"),t(\"li\",[v._v(\"不要过度索引，创建维护需要时间空间\")])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"索引的使用场景\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引的使用场景\"}},[v._v(\"#\")]),v._v(\" 索引的使用场景\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"索引优化\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引优化\"}},[v._v(\"#\")]),v._v(\" 索引优化\")]),v._v(\" \"),t(\"p\",[v._v(\"将不符合要求的索引优化成符合索引设计原则和应用场景的索引\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"索引的设计原则\")]),v._v(\" \"),t(\"li\",[v._v(\"索引不能是表达式一部分和函数的参数，如where a+1=2\")]),v._v(\" \"),t(\"li\",[v._v(\"将区分度高的索引放在前面\")]),v._v(\" \"),t(\"li\",[v._v(\"少使用select *\")])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"创建-删除索引\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建-删除索引\"}},[v._v(\"#\")]),v._v(\" 创建/删除索引\")]),v._v(\" \"),t(\"p\",[v._v(\"ssss\")])])}),[],!1,null,null,null);_.default=s.exports}}]);","extractedComments":[]}